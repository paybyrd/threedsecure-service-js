{"version":3,"file":"index.module.js","sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../src/shared/utils/Base64Converter.ts","../src/shared/utils/Browser.ts","../src/shared/utils/Delay.ts","../src/shared/utils/HtmlElementFactory.ts","../src/httpClients/retryPolicies/LinearRetryPolicy.ts","../src/services/abstractions/ChallengeWindowSize.ts","../src/httpClients/FetchHttpClient.ts","../src/loggers/ConsoleLogger.ts","../src/services/IFrameChallengeService.ts","../src/services/IFrameDirectoryServerService.ts","../src/services/ThreeDSecureService.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","import { Buffer } from \"buffer/\";\r\n\r\nexport class Base64Converter {\r\n    static convert(data: object) {\r\n        const json = JSON.stringify(data);\r\n        const buffer = Buffer.from(json, 'utf-8');\r\n        const base64Json = buffer.toString('base64');\r\n        return base64Json\r\n            .replace(/=/g, '')\r\n            .replace(/\\+/g, '-')\r\n            .replace(/\\//g, '_');\r\n    }\r\n}","import { IBrowser } from \"../abstractions\";\r\n\r\nexport class Browser {\r\n    static create(): IBrowser {\r\n        const allowedBrowserColorDepth = [48, 32, 24, 16, 15, 8, 4, 1];\r\n        const colorDepth = allowedBrowserColorDepth.find(x => x <= screen.colorDepth)!;\r\n        return {\r\n            javaEnabled: navigator.javaEnabled(),\r\n            javascriptEnabled: true,\r\n            language: navigator.language,\r\n            userAgent: navigator.userAgent,\r\n            screenWidth: window.screen.width,\r\n            screenHeight: window.screen.height,\r\n            timezoneOffset: new Date().getTimezoneOffset(),\r\n            colorDepth,\r\n            acceptHeader: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'\r\n        };\r\n    }\r\n}","import { IDelay } from \"../abstractions\";\r\n\r\nexport class Delay implements IDelay {\r\n    private _task: Promise<void>;\r\n    private _timeout: NodeJS.Timeout;\r\n    \r\n    constructor(delay: number) {\r\n        this._task = new Promise<void>((resolve) => {\r\n            this._timeout = setTimeout(resolve, delay);\r\n        });\r\n    }\r\n\r\n    wait() {\r\n        return this._task;\r\n    }\r\n\r\n    cancel() {\r\n        clearTimeout(this._timeout);\r\n        this._task = Promise.reject({\r\n            message: 'Timer cancelled'\r\n        });\r\n    }\r\n\r\n    static sleep(delay: number): IDelay {\r\n        return new Delay(delay);\r\n    }\r\n\r\n    static cancel(id: number) {\r\n        clearTimeout(id);\r\n    }\r\n}","import { ICreateForm, ICreateIFrame, ICreateInput } from \"./abstractions\";\r\n\r\nexport class HtmlElementFactory {\r\n    static createIFrame(createIFrame: ICreateIFrame) : HTMLIFrameElement {\r\n        const iframe = document.createElement('iframe');\r\n        iframe.id = createIFrame.name;\r\n        iframe.name = createIFrame.name;\r\n\r\n        if (createIFrame.useDefaultStyle) {\r\n            iframe.setAttribute('style', `border: none;position: absolute; top: 0; left: 0; bottom: 0; right: 0; width: 100%; height: 100%;opacity: ${createIFrame.isVisible ? '1' : '0'}`);\r\n        }\r\n        else {\r\n            iframe.style.opacity = createIFrame.isVisible ? '1' : '0';            \r\n        }\r\n\r\n        createIFrame.parent?.appendChild(iframe);\r\n\r\n        return iframe;\r\n    }\r\n\r\n    static createForm(createForm: ICreateForm): HTMLFormElement {\r\n        const form = document.createElement('form');\r\n        form.id = createForm.name;\r\n        form.name = createForm.name;\r\n        form.action = createForm.actionUrl;\r\n        form.target = createForm.target;\r\n        form.method = createForm.method;\r\n        \r\n        createForm.parent.appendChild(form);\r\n\r\n        return form;\r\n    }\r\n\r\n    static createInput(createInput: ICreateInput): HTMLInputElement {\r\n        const input = document.createElement('input');\r\n        input.id = createInput.name;\r\n        input.name = createInput.name;\r\n        input.type = createInput.type;\r\n        \r\n        createInput.parent.appendChild(input);\r\n\r\n        return input;\r\n    }\r\n}","import { ILog, ILogger } from \"../../loggers/abstractions\";\r\nimport { Delay } from \"../../shared/utils\";\r\nimport { ExecuteFunction, IRetryOptions, IRetryPolicy } from \"../abstractions\";\r\n\r\nexport class LinearRetryPolicy implements IRetryPolicy {\r\n    private readonly _options: IRetryOptions;\r\n    private readonly _logger: ILogger;\r\n\r\n    constructor(options: IRetryOptions, logger: ILogger) {\r\n        this._options = options;\r\n        this._logger = logger;\r\n    }\r\n    \r\n    execute<T>(executeFn: ExecuteFunction<T>, method: string) : Promise<T> {\r\n        return new Promise<T>(async (resolve, reject) => {\r\n            let attempt = 1;\r\n            let lastError: ILog|null = null;\r\n            do {\r\n                try {\r\n                    let result = await executeFn({\r\n                        attempt: attempt,\r\n                        maxAttempts: this._options.maxAttempts\r\n                    });\r\n                    if (result.isSuccess) {\r\n                        resolve(result.data);\r\n                        return;\r\n                    }\r\n                    if (!result.isTransientError) {\r\n                        reject(result);\r\n                        return;\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    lastError = {\r\n                        message: `Unhandled error calling \"${method}\"`,\r\n                        error,\r\n                        additionalData: {\r\n                            attempt,\r\n                            maxAttempts: this._options.maxAttempts\r\n                        }\r\n                    };\r\n                    this._logger.log(lastError);\r\n                }\r\n                attempt++;\r\n                await Delay.sleep(this._options.attemptDelay).wait();\r\n            } while (attempt <= this._options.maxAttempts);\r\n\r\n            reject(lastError);\r\n        });\r\n    }\r\n}","export enum ChallengeWindowSize {\r\n    width250xheight400 = '01',\r\n    width390xheight400 = '02',\r\n    width500xheight600 = '03',\r\n    width600xheight400 = '04',\r\n    fullscreen = '05'\r\n}\r\n","import { ILogger } from \"../loggers/abstractions\";\r\nimport { IHttpClient, IHttpClientOptions, IRequest, IRetryPolicy } from \"./abstractions\";\r\nimport { LinearRetryPolicy } from \"./retryPolicies\";\r\n\r\nexport class FetchHttpClient implements IHttpClient {\r\n    private readonly _options: IHttpClientOptions;\r\n    private readonly _retryPolicy: IRetryPolicy;\r\n    private readonly _logger: ILogger;\r\n\r\n    constructor(options: IHttpClientOptions, logger: ILogger, retryPolicy: IRetryPolicy = new LinearRetryPolicy(options, logger)) {\r\n        this._retryPolicy = retryPolicy;\r\n        this._logger = logger;\r\n        this._options = options;\r\n    }\r\n    \r\n    async send<T>(request: IRequest): Promise<T> {\r\n        const self = this;\r\n        return await this._retryPolicy.execute<T>(async ({attempt, maxAttempts}) => {\r\n            const timeout = (self._options.timeoutInSeconds || 30) * 1000;\r\n            const abortController = new AbortController();\r\n            const timeoutId = setTimeout(() => abortController.abort(), timeout);\r\n\r\n            this._logger.log({\r\n                message: '[Request] HttpClient',\r\n                content: {\r\n                    request,\r\n                    attempt,\r\n                    maxAttempts\r\n                }\r\n            });\r\n\r\n            const response = await fetch(request.url, {\r\n                headers: {\r\n                    ...request.headers,\r\n                    'x-attempt': attempt.toString(),\r\n                    'x-max-attempts': maxAttempts.toString(),\r\n                    'accept': 'application/json',\r\n                    'content-type': 'application/json',\r\n                },\r\n                keepalive: true,\r\n                body: JSON.stringify(request.body),\r\n                method: request.method,\r\n                signal: abortController.signal\r\n            });\r\n\r\n            this._logger.log({\r\n                message: '[Response] HttpClient',\r\n                content: {\r\n                    response,\r\n                    attempt,\r\n                    maxAttempts\r\n                }\r\n            });\r\n\r\n            clearTimeout(timeoutId);\r\n            const result = await response.json();\r\n            return {\r\n                isSuccess: response.ok,\r\n                isTransientError: this.isTransientError(response),\r\n                data: response.ok ? result.data : result\r\n            };\r\n        }, `[${request.method}] ${request.url}`);\r\n    }\r\n\r\n    isTransientError(response: Response): boolean {\r\n        const TRANSIENT_STATUS = [409, 424, 500, 503, 504];\r\n\r\n        return TRANSIENT_STATUS.includes(response.status);\r\n    }\r\n}","import { ILog, ILogger } from \"./abstractions\";\r\n\r\nexport class ConsoleLogger implements ILogger {\r\n    log(log: ILog): void {\r\n        console.log(JSON.stringify(log));\r\n    }\r\n\r\n}","import { ILogger } from \"../loggers/abstractions\";\r\nimport { Base64Converter, HtmlElementFactory } from \"../shared/utils\";\r\nimport { ChallengeWindowSize, IAuthResponse, IChallengeOptions, IChallengeService } from \"./abstractions\";\r\n\r\nexport class IFrameChallengeService implements IChallengeService {\r\n    private static readonly IFRAME_NAME = 'challengeIframe';\r\n    private static readonly FORM_NAME = 'challengeForm';\r\n    private static readonly CREQ_INPUT_NAME = 'creq';\r\n    private static readonly CREQ_INPUT_TYPE = 'hidden';\r\n\r\n    private readonly _options: IChallengeOptions;\r\n    private readonly _logger: ILogger;\r\n\r\n    constructor(options: IChallengeOptions, logger: ILogger) {\r\n        this._options = options;\r\n        this._logger = logger;\r\n    }\r\n\r\n    execute(authResponse: IAuthResponse): Promise<void> {\r\n        if (!authResponse.challengeUrl) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            try {\r\n                this._logger.log({\r\n                    message: '[Request] Challenge execution',\r\n                    content: {\r\n                        authResponse\r\n                    }\r\n                });\r\n\r\n                 HtmlElementFactory.createIFrame({\r\n                    parent: this._options.container,\r\n                    name: IFrameChallengeService.IFRAME_NAME,\r\n                    isVisible: true,\r\n                    useDefaultStyle: !!this._options.onIFrameCreatedFn\r\n                });\r\n                \r\n                const form = HtmlElementFactory.createForm({\r\n                    parent: this._options.container,\r\n                    name: IFrameChallengeService.FORM_NAME,\r\n                    actionUrl: authResponse.challengeUrl,\r\n                    target: IFrameChallengeService.IFRAME_NAME,\r\n                    method: 'post'\r\n                });\r\n\r\n                const threeDSRequestInput = HtmlElementFactory.createInput({\r\n                    parent: form,\r\n                    name: IFrameChallengeService.CREQ_INPUT_NAME,\r\n                    type: IFrameChallengeService.CREQ_INPUT_TYPE\r\n                });\r\n\r\n                const cReq = {\r\n                    threeDSServerTransID: authResponse.processId,\r\n                    acsTransID: authResponse.challengeId,\r\n                    messageVersion: authResponse.challengeVersion,\r\n                    messageType: \"CReq\",\r\n                    challengeWindowSize: this._options.challengeWindowSize || ChallengeWindowSize.width250xheight400\r\n                };\r\n\r\n                const base64CReq = Base64Converter.convert(cReq)\r\n                threeDSRequestInput.value = base64CReq;\r\n\r\n                form.submit();\r\n\r\n                this._logger.log({\r\n                    message: '[Response] Challenge execution',\r\n                    content: {\r\n                        authResponse,\r\n                        cReq,\r\n                        base64CReq\r\n                    }\r\n                });\r\n\r\n                resolve();\r\n            }\r\n            catch (error) {\r\n                this._logger.log({\r\n                    message: '[Error] Challenge execution',\r\n                    content: {\r\n                        authResponse,\r\n                        error\r\n                    }\r\n                });\r\n\r\n                return reject({\r\n                    message: error.toString()\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n}","import { ILogger } from \"../loggers/abstractions\";\r\nimport { Base64Converter, HtmlElementFactory } from \"../shared/utils\";\r\nimport { IDirectoryServerOptions, IDirectoryServerService } from \"./abstractions\";\r\nimport { IPreAuthResponse } from \"./abstractions/IPreAuthResponse\";\r\n\r\nexport class IFrameDirectoryServerService implements IDirectoryServerService {\r\n    private static readonly IFRAME_NAME: string = 'threeDSMethodIframe';\r\n    private static readonly FORM_NAME: string = 'threeDSMethodForm';\r\n    private static readonly FORM_INPUT_NAME: string = 'threeDSMethodData';\r\n    private static readonly FROM_INPUT_TYPE: string = 'hidden';\r\n\r\n    private readonly _logger: ILogger;\r\n    private readonly _options: IDirectoryServerOptions;\r\n\r\n    constructor(options: IDirectoryServerOptions, logger: ILogger) {\r\n        this._logger = logger;\r\n        this._options = options;\r\n    }\r\n\r\n    execute(preAuthResponse: IPreAuthResponse) : Promise<void> {\r\n        if (!preAuthResponse.dsMethodUrl) {\r\n            return Promise.resolve();\r\n        }        \r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            try {\r\n                this._logger.log({\r\n                    message: '[Request] DirectoryServer execution',\r\n                    content: {\r\n                        preAuthResponse\r\n                    }\r\n                });\r\n\r\n                const iframe = HtmlElementFactory.createIFrame({\r\n                    parent: this._options.container,\r\n                    isVisible: false,\r\n                    name: IFrameDirectoryServerService.IFRAME_NAME,\r\n                    useDefaultStyle: !!this._options.onIFrameCreatedFn\r\n                });\r\n                this._options.onIFrameCreatedFn?.call(this._options, iframe);\r\n                \r\n                const form = HtmlElementFactory.createForm({\r\n                    parent: this._options.container,\r\n                    name: IFrameDirectoryServerService.FORM_NAME,\r\n                    actionUrl: preAuthResponse.dsMethodUrl,\r\n                    target: IFrameDirectoryServerService.IFRAME_NAME,\r\n                    method: 'POST'\r\n                });\r\n\r\n                const threeDSMethodDataInput = HtmlElementFactory.createInput({\r\n                    parent: form,\r\n                    name: IFrameDirectoryServerService.FORM_INPUT_NAME,\r\n                    type: IFrameDirectoryServerService.FROM_INPUT_TYPE\r\n                });\r\n\r\n                const threeDSMethodData = {\r\n                    threeDSServerTransID: preAuthResponse.processId,\r\n                    threeDSMethodNotificationURL: preAuthResponse.notificationUrl\r\n                };\r\n\r\n                const threeDSMethodDataBase64 = Base64Converter.convert(threeDSMethodData)\r\n                threeDSMethodDataInput.value = threeDSMethodDataBase64;\r\n\r\n                form.submit();\r\n\r\n                this._logger.log({\r\n                    message: '[Response] DirectoryServer execution',\r\n                    content: {\r\n                        preAuthResponse,\r\n                        threeDSMethodDataBase64\r\n                    }\r\n                });\r\n\r\n                resolve();\r\n            }\r\n            catch (error) {\r\n                this._logger.log({\r\n                    message: '[Error] DirectoryServer execution',\r\n                    content: {\r\n                        preAuthResponse,\r\n                        error\r\n                    }\r\n                });\r\n\r\n                return reject({\r\n                    message: error.toString()\r\n                });\r\n            }\r\n        });\r\n    }\r\n}","import { FetchHttpClient } from \"../httpClients\";\r\nimport { IHttpClient } from \"../httpClients/abstractions\";\r\nimport { ConsoleLogger } from \"../loggers\";\r\nimport { ILogger } from \"../loggers/abstractions\";\r\nimport { Browser } from \"../shared/utils\";\r\nimport { IAuthRequest, IAuthResponse, IChallengeService, IDirectoryServerService, IExecuteRequest, IPostAuthRequest, IPostAuthResponse, IThreeDSecureOptions, IThreeDSecureService } from \"./abstractions\";\r\nimport { IPreAuthRequest } from \"./abstractions/IPreAuthRequest\";\r\nimport { IPreAuthResponse } from \"./abstractions/IPreAuthResponse\";\r\nimport { IFrameChallengeService } from \"./IFrameChallengeService\";\r\nimport { IFrameDirectoryServerService } from \"./IFrameDirectoryServerService\";\r\n\r\n export class ThreeDSecureService implements IThreeDSecureService {\r\n    private readonly _options: IThreeDSecureOptions;\r\n    private readonly _logger: ILogger;\r\n    private readonly _client: IHttpClient;\r\n    private readonly _directoryServer: IDirectoryServerService;\r\n    private readonly _challenge: IChallengeService;\r\n\r\n    constructor(\r\n        options: IThreeDSecureOptions,\r\n        logger: ILogger = new ConsoleLogger(),\r\n        httpClient: IHttpClient = new FetchHttpClient(options, logger),\r\n        directoryServer: IDirectoryServerService = new IFrameDirectoryServerService(options, logger),\r\n        challenge: IChallengeService = new IFrameChallengeService(options, logger)) {\r\n        this._options = options;\r\n        this._logger = logger;\r\n        this._client = httpClient;\r\n        this._directoryServer = directoryServer;\r\n        this._challenge = challenge;\r\n    }\r\n\r\n     async execute(request: IExecuteRequest): Promise<IPostAuthResponse> {\r\n        this._logger.log({\r\n            message: '[Request] PreAuth',\r\n            content: request\r\n        });\r\n        let preAuthResponse = await this._preAuth(request);\r\n        this._logger.log({\r\n            message: '[Response] PreAuth',\r\n            content: preAuthResponse\r\n        });\r\n        await this._directoryServer.execute(preAuthResponse);\r\n        this._logger.log({\r\n            message: '[Request] Auth',\r\n            content: preAuthResponse\r\n        });\r\n        let authResponse = await this._auth(preAuthResponse);\r\n        this._logger.log({\r\n            message: '[Response] Auth',\r\n            content: authResponse\r\n        });\r\n        await this._challenge.execute(authResponse);\r\n        this._logger.log({\r\n            message: '[Request] PostAuth',\r\n            content: authResponse\r\n        });\r\n        let postAuthResponse = await this._postAuth(authResponse);\r\n        this._logger.log({\r\n            message: '[Response] PostAuth',\r\n            content: postAuthResponse\r\n        });\r\n        return postAuthResponse;\r\n     }\r\n\r\n     _preAuth(request: IPreAuthRequest): Promise<IPreAuthResponse> {\r\n        return this._client.send<IPreAuthResponse>({\r\n            url: `${this._options.threeDSecureUrl}/api/v2/${request.id}/preAuth`,\r\n            method: 'POST',\r\n            body: {\r\n                browser: Browser.create()\r\n            }\r\n        });\r\n     }\r\n\r\n     _auth(request: IAuthRequest): Promise<IAuthResponse> {\r\n        return this._client.send<IAuthResponse>({\r\n            url: `${this._options.threeDSecureUrl}/api/v1/${request.id}/auth`,\r\n            method: 'POST'\r\n        });\r\n     }\r\n\r\n     _postAuth(request: IPostAuthRequest): Promise<IPostAuthResponse> {\r\n        return this._client.send<IPostAuthResponse>({\r\n            url: `${this._options.threeDSecureUrl}/api/v2/${request.id}/postAuth`,\r\n            method: 'POST'\r\n        });\r\n     }\r\n }\r\n\r\n "],"names":["lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","encodeChunk","uint8","start","end","num","output","push","join","lens","placeHoldersLen","tmp","arr","_byteLength","curByte","extraBytes","parts","maxChunkLength","len2","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","value","c","rt","abs","isNaN","floor","log","LN2","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","byteLength","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","ieee754","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","INVALID_BASE64_RE","leadSurrogate","toByteArray","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","Base64Converter","convert","json","JSON","stringify","Browser","create","colorDepth","find","screen","javaEnabled","navigator","javascriptEnabled","language","userAgent","screenWidth","window","width","screenHeight","height","timezoneOffset","Date","getTimezoneOffset","acceptHeader","Delay","delay","_this","_task","_timeout","Promise","resolve","setTimeout","_proto","wait","cancel","clearTimeout","reject","sleep","id","HtmlElementFactory","createIFrame","_createIFrame$parent","iframe","document","createElement","useDefaultStyle","setAttribute","isVisible","style","opacity","parent","appendChild","createForm","form","action","actionUrl","method","createInput","_settle","pact","state","_Pact","then","onFulfilled","onRejected","result","callback","v","o","ChallengeWindowSize","LinearRetryPolicy","options","logger","_options","_logger","execute","executeFn","_exit","_temp4","_result2","lastError","attempt","_temp3","_do","_temp2","_result","attemptDelay","_temp","maxAttempts","isSuccess","isTransientError","_catch","additionalData","FetchHttpClient","retryPolicy","_retryPolicy","send","request","self","_ref","timeout","timeoutInSeconds","abortController","AbortController","timeoutId","abort","content","fetch","url","headers","_extends","accept","keepalive","body","signal","response","ok","status","ConsoleLogger","IFrameChallengeService","authResponse","challengeUrl","container","IFRAME_NAME","onIFrameCreatedFn","FORM_NAME","threeDSRequestInput","CREQ_INPUT_NAME","CREQ_INPUT_TYPE","cReq","threeDSServerTransID","processId","acsTransID","challengeId","messageVersion","challengeVersion","messageType","challengeWindowSize","width250xheight400","base64CReq","submit","IFrameDirectoryServerService","preAuthResponse","dsMethodUrl","_this$_options$onIFra","threeDSMethodDataInput","FORM_INPUT_NAME","FROM_INPUT_TYPE","threeDSMethodDataBase64","threeDSMethodNotificationURL","notificationUrl","ThreeDSecureService","httpClient","directoryServer","challenge","_client","_directoryServer","_challenge","_preAuth","_auth","_postAuth","postAuthResponse","threeDSecureUrl","browser"],"mappings":"oOAWA,IATA,IAIIA,EAAS,GACTC,EAAY,GACZC,EAA4B,oBAAfC,WAA6BA,WAAaC,MAEvDC,EAAO,mEACFC,EAAI,EAAGC,EAAMF,EAAKG,OAAQF,EAAIC,IAAOD,EAC5CN,EAAOM,GAAKD,EAAKC,GACjBL,EAAUI,EAAKI,WAAWH,IAAMA,EAQlC,SAASI,EAASC,GAChB,IAAIJ,EAAMI,EAAIH,OAEd,GAAID,EAAM,EAAI,EACZ,MAAM,IAAIK,MAAM,kDAKlB,IAAIC,EAAWF,EAAIG,QAAQ,KAO3B,OANkB,IAAdD,IAAiBA,EAAWN,GAMzB,CAACM,EAJcA,IAAaN,EAC/B,EACA,EAAKM,EAAW,EAGtB,CAmEA,SAASE,EAAaC,EAAOC,EAAOC,GAGlC,IAFA,IARwBC,EASpBC,EAAS,GACJd,EAAIW,EAAOX,EAAIY,EAAKZ,GAAK,EAKhCc,EAAOC,KAdFrB,GADiBmB,GAYlBH,EAAMV,IAAM,GAAM,WAClBU,EAAMV,EAAI,IAAM,EAAK,QACP,IAAfU,EAAMV,EAAI,MAbM,GAAK,IACxBN,EAAOmB,GAAO,GAAK,IACnBnB,EAAOmB,GAAO,EAAI,IAClBnB,EAAa,GAANmB,IAaT,OAAOC,EAAOE,KAAK,GACrB,CAlGArB,EAAU,IAAIQ,WAAW,IAAM,GAC/BR,EAAU,IAAIQ,WAAW,IAAM,yBAsB/B,SAAqBE,GACnB,IAAIY,EAAOb,EAAQC,GAEfa,EAAkBD,EAAK,GAC3B,OAAuC,GAFxBA,EAAK,GAEAC,GAAuB,EAAKA,CAClD,cAMA,SAAsBb,GACpB,IAAIc,EAcAnB,EAbAiB,EAAOb,EAAQC,GACfE,EAAWU,EAAK,GAChBC,EAAkBD,EAAK,GAEvBG,EAAM,IAAIxB,EAVhB,SAAsBS,EAAKE,EAAUW,GACnC,OAAuC,GAA9BX,EAAWW,GAAuB,EAAKA,CAClD,CAQoBG,CAAYhB,EAAKE,EAAUW,IAEzCI,EAAU,EAGVrB,EAAMiB,EAAkB,EACxBX,EAAW,EACXA,EAGJ,IAAKP,EAAI,EAAGA,EAAIC,EAAKD,GAAK,EACxBmB,EACGxB,EAAUU,EAAIF,WAAWH,KAAO,GAChCL,EAAUU,EAAIF,WAAWH,EAAI,KAAO,GACpCL,EAAUU,EAAIF,WAAWH,EAAI,KAAO,EACrCL,EAAUU,EAAIF,WAAWH,EAAI,IAC/BoB,EAAIE,KAAcH,GAAO,GAAM,IAC/BC,EAAIE,KAAcH,GAAO,EAAK,IAC9BC,EAAIE,KAAmB,IAANH,EAmBnB,OAhBwB,IAApBD,IACFC,EACGxB,EAAUU,EAAIF,WAAWH,KAAO,EAChCL,EAAUU,EAAIF,WAAWH,EAAI,KAAO,EACvCoB,EAAIE,KAAmB,IAANH,GAGK,IAApBD,IACFC,EACGxB,EAAUU,EAAIF,WAAWH,KAAO,GAChCL,EAAUU,EAAIF,WAAWH,EAAI,KAAO,EACpCL,EAAUU,EAAIF,WAAWH,EAAI,KAAO,EACvCoB,EAAIE,KAAcH,GAAO,EAAK,IAC9BC,EAAIE,KAAmB,IAANH,GAGZC,CACT,gBAsBA,SAAwBV,GAQtB,IAPA,IAAIS,EACAlB,EAAMS,EAAMR,OACZqB,EAAatB,EAAM,EACnBuB,EAAQ,GACRC,EAAiB,MAGZzB,EAAI,EAAG0B,EAAOzB,EAAMsB,EAAYvB,EAAI0B,EAAM1B,GAAKyB,EACtDD,EAAMT,KAAKN,EAAYC,EAAOV,EAAIA,EAAIyB,EAAkBC,EAAOA,EAAQ1B,EAAIyB,IAqB7E,OAjBmB,IAAfF,EAEFC,EAAMT,KACJrB,GAFFyB,EAAMT,EAAMT,EAAM,KAEF,GACdP,EAAQyB,GAAO,EAAK,IACpB,MAEsB,IAAfI,GAETC,EAAMT,KACJrB,GAFFyB,GAAOT,EAAMT,EAAM,IAAM,GAAKS,EAAMT,EAAM,KAE1B,IACdP,EAAQyB,GAAO,EAAK,IACpBzB,EAAQyB,GAAO,EAAK,IACpB,KAIGK,EAAMR,KAAK,GACpB,WCpJe,SAAUW,EAAQC,EAAQC,EAAMC,EAAMC,GACnD,IAAIC,EAAGC,EACHC,EAAiB,EAATH,EAAcD,EAAO,EAC7BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACTrC,EAAI6B,EAAQE,EAAS,EAAK,EAC1BO,EAAIT,GAAQ,EAAI,EAChBU,EAAIZ,EAAOC,EAAS5B,GAOxB,IALAA,GAAKsC,EAELN,EAAIO,GAAM,IAAOF,GAAU,EAC3BE,KAAQF,EACRA,GAASH,EACFG,EAAQ,EAAGL,EAAS,IAAJA,EAAWL,EAAOC,EAAS5B,GAAIA,GAAKsC,EAAGD,GAAS,GAKvE,IAHAJ,EAAID,GAAM,IAAOK,GAAU,EAC3BL,KAAQK,EACRA,GAASP,EACFO,EAAQ,EAAGJ,EAAS,IAAJA,EAAWN,EAAOC,EAAS5B,GAAIA,GAAKsC,EAAGD,GAAS,GAEvE,GAAU,IAANL,EACFA,EAAI,EAAII,MACH,IAAIJ,IAAMG,EACf,OAAOF,EAAIO,IAAsBC,UAAdF,GAAK,EAAI,GAE5BN,GAAQS,KAAKC,IAAI,EAAGb,GACpBE,GAAQI,CACT,CACD,OAAQG,GAAK,EAAI,GAAKN,EAAIS,KAAKC,IAAI,EAAGX,EAAIF,EAC5C,QAEgB,SAAUH,EAAQiB,EAAOhB,EAAQC,EAAMC,EAAMC,GAC3D,IAAIC,EAAGC,EAAGY,EACNX,EAAiB,EAATH,EAAcD,EAAO,EAC7BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBW,EAAe,KAAThB,EAAcY,KAAKC,IAAI,GAAI,IAAMD,KAAKC,IAAI,GAAI,IAAM,EAC1D3C,EAAI6B,EAAO,EAAKE,EAAS,EACzBO,EAAIT,EAAO,GAAK,EAChBU,EAAIK,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQF,KAAKK,IAAIH,GAEbI,MAAMJ,IAAoBH,WAAVG,GAClBX,EAAIe,MAAMJ,GAAS,EAAI,EACvBZ,EAAIG,IAEJH,EAAIU,KAAKO,MAAMP,KAAKQ,IAAIN,GAASF,KAAKS,KAClCP,GAASC,EAAIH,KAAKC,IAAI,GAAIX,IAAM,IAClCA,IACAa,GAAK,IAGLD,GADEZ,EAAII,GAAS,EACNU,EAAKD,EAELC,EAAKJ,KAAKC,IAAI,EAAG,EAAIP,IAEpBS,GAAK,IACfb,IACAa,GAAK,GAGHb,EAAII,GAASD,GACfF,EAAI,EACJD,EAAIG,GACKH,EAAII,GAAS,GACtBH,GAAMW,EAAQC,EAAK,GAAKH,KAAKC,IAAI,EAAGb,GACpCE,GAAQI,IAERH,EAAIW,EAAQF,KAAKC,IAAI,EAAGP,EAAQ,GAAKM,KAAKC,IAAI,EAAGb,GACjDE,EAAI,IAIDF,GAAQ,EAAGH,EAAOC,EAAS5B,GAAS,IAAJiC,EAAUjC,GAAKsC,EAAGL,GAAK,IAAKH,GAAQ,GAI3E,IAFAE,EAAKA,GAAKF,EAAQG,EAClBC,GAAQJ,EACDI,EAAO,EAAGP,EAAOC,EAAS5B,GAAS,IAAJgC,EAAUhC,GAAKsC,EAAGN,GAAK,IAAKE,GAAQ,GAE1EP,EAAOC,EAAS5B,EAAIsC,IAAU,IAAJC,CAC5B,sBCxEA,MAAMa,EACe,mBAAXC,QAAkD,mBAAlBA,OAAY,IAChDA,OAAY,IAAE,8BACd,KAENC,EAAAC,OAAiBA,EACjBD,EAAAE,WAyTA,SAAqBtD,GAInB,OAHKA,GAAUA,IACbA,EAAS,GAEJqD,EAAOE,OAAOvD,EACvB,EA7TAoD,EAAAI,kBAA4B,GAE5B,MAAMC,EAAe,WAwDrB,SAASC,EAAc1D,GACrB,GAAIA,EAASyD,EACX,MAAM,IAAIE,WAAW,cAAgB3D,EAAS,kCAGhD,MAAM4D,EAAM,IAAIjE,WAAWK,GAE3B,OADA6D,OAAOC,eAAeF,EAAKP,EAAOU,WAC3BH,CACT,CAYA,SAASP,EAAQW,EAAKC,EAAkBjE,GAEtC,GAAmB,iBAARgE,EAAkB,CAC3B,GAAgC,iBAArBC,EACT,MAAM,IAAIC,UACR,sEAGJ,OAAOC,EAAYH,EACpB,CACD,OAAOI,EAAKJ,EAAKC,EAAkBjE,EACrC,CAIA,SAASoE,EAAM1B,EAAOuB,EAAkBjE,GACtC,GAAqB,iBAAV0C,EACT,OAqHJ,SAAqB2B,EAAQC,GAK3B,GAJwB,iBAAbA,GAAsC,KAAbA,IAClCA,EAAW,SAGRjB,EAAOkB,WAAWD,GACrB,MAAM,IAAIJ,UAAU,qBAAuBI,GAG7C,MAAMtE,EAAwC,EAA/BwE,EAAWH,EAAQC,GAClC,IAAIV,EAAMF,EAAa1D,GAEvB,MAAMyE,EAASb,EAAIc,MAAML,EAAQC,GASjC,OAPIG,IAAWzE,IAIb4D,EAAMA,EAAIe,MAAM,EAAGF,IAGdb,CACT,CA3IWgB,CAAWlC,EAAOuB,GAG3B,GAAIY,YAAYC,OAAOpC,GACrB,OAkJJ,SAAwBqC,GACtB,GAAIC,EAAWD,EAAWpF,YAAa,CACrC,MAAMsF,EAAO,IAAItF,WAAWoF,GAC5B,OAAOG,EAAgBD,EAAKxD,OAAQwD,EAAKE,WAAYF,EAAKT,WAC3D,CACD,OAAOY,EAAcL,EACvB,CAxJWM,CAAc3C,GAGvB,GAAa,MAATA,EACF,MAAM,IAAIwB,UACR,yHACiDxB,GAIrD,GAAIsC,EAAWtC,EAAOmC,cACjBnC,GAASsC,EAAWtC,EAAMjB,OAAQoD,aACrC,OAAOK,EAAgBxC,EAAOuB,EAAkBjE,GAGlD,GAAiC,oBAAtBsF,oBACNN,EAAWtC,EAAO4C,oBAClB5C,GAASsC,EAAWtC,EAAMjB,OAAQ6D,oBACrC,OAAOJ,EAAgBxC,EAAOuB,EAAkBjE,GAGlD,GAAqB,iBAAV0C,EACT,MAAM,IAAIwB,UACR,yEAIJ,MAAMqB,EAAU7C,EAAM6C,SAAW7C,EAAM6C,UACvC,GAAe,MAAXA,GAAmBA,IAAY7C,EACjC,OAAOW,EAAOe,KAAKmB,EAAStB,EAAkBjE,GAGhD,MAAMwF,EAkJR,SAAqBC,GACnB,GAAIpC,EAAOqC,SAASD,GAAM,CACxB,MAAM1F,EAA4B,EAAtB4F,EAAQF,EAAIzF,QAClB4D,EAAMF,EAAa3D,GAEzB,OAAmB,IAAf6D,EAAI5D,QAIRyF,EAAIR,KAAKrB,EAAK,EAAG,EAAG7D,GAHX6D,CAKV,CAED,YAAmBgC,IAAfH,EAAIzF,OACoB,iBAAfyF,EAAIzF,QAAuB6F,EAAYJ,EAAIzF,QAC7C0D,EAAa,GAEf0B,EAAcK,GAGN,WAAbA,EAAIK,MAAqBlG,MAAMmG,QAAQN,EAAIO,MACtCZ,EAAcK,EAAIO,WAD3B,CAGF,CAzKYC,CAAWvD,GACrB,GAAI8C,EAAG,OAAOA,EAEd,GAAsB,oBAAXrC,QAAgD,MAAtBA,OAAO+C,aACH,mBAA9BxD,EAAMS,OAAO+C,aACtB,OAAO7C,EAAOe,KAAK1B,EAAMS,OAAO+C,aAAa,UAAWjC,EAAkBjE,GAG5E,MAAM,IAAIkE,UACR,yHACiDxB,EAErD,CAmBA,SAASyD,EAAYC,GACnB,GAAoB,iBAATA,EACT,MAAM,IAAIlC,UAAU,0CACf,GAAIkC,EAAO,EAChB,MAAM,IAAIzC,WAAW,cAAgByC,EAAO,iCAEhD,CA0BA,SAASjC,EAAaiC,GAEpB,OADAD,EAAWC,GACJ1C,EAAa0C,EAAO,EAAI,EAAoB,EAAhBT,EAAQS,GAC7C,CAuCA,SAAShB,EAAeiB,GACtB,MAAMrG,EAASqG,EAAMrG,OAAS,EAAI,EAA4B,EAAxB2F,EAAQU,EAAMrG,QAC9C4D,EAAMF,EAAa1D,GACzB,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,GAAK,EAC/B8D,EAAI9D,GAAgB,IAAXuG,EAAMvG,GAEjB,OAAO8D,CACT,CAUA,SAASsB,EAAiBmB,EAAOlB,EAAYnF,GAC3C,GAAImF,EAAa,GAAKkB,EAAM7B,WAAaW,EACvC,MAAM,IAAIxB,WAAW,wCAGvB,GAAI0C,EAAM7B,WAAaW,GAAcnF,GAAU,GAC7C,MAAM,IAAI2D,WAAW,wCAGvB,IAAIC,EAYJ,OAVEA,OADiBgC,IAAfT,QAAuCS,IAAX5F,EACxB,IAAIL,WAAW0G,QACDT,IAAX5F,EACH,IAAIL,WAAW0G,EAAOlB,GAEtB,IAAIxF,WAAW0G,EAAOlB,EAAYnF,GAI1C6D,OAAOC,eAAeF,EAAKP,EAAOU,WAE3BH,CACT,CA2BA,SAAS+B,EAAS3F,GAGhB,GAAIA,GAAUyD,EACZ,MAAM,IAAIE,WAAW,0DACaF,EAAa6C,SAAS,IAAM,UAEhE,OAAgB,EAATtG,CACT,CAsGA,SAASwE,EAAYH,EAAQC,GAC3B,GAAIjB,EAAOqC,SAASrB,GAClB,OAAOA,EAAOrE,OAEhB,GAAI6E,YAAYC,OAAOT,IAAWW,EAAWX,EAAQQ,aACnD,OAAOR,EAAOG,WAEhB,GAAsB,iBAAXH,EACT,MAAM,IAAIH,UACR,kGAC0BG,GAI9B,MAAMtE,EAAMsE,EAAOrE,OACbuG,EAAaC,UAAUxG,OAAS,IAAsB,IAAjBwG,UAAU,GACrD,IAAKD,GAAqB,IAARxG,EAAW,OAAO,EAGpC,IAAI0G,GAAc,EAClB,OACE,OAAQnC,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOvE,EACT,IAAK,OACL,IAAK,QACH,OAAO2G,EAAYrC,GAAQrE,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAAND,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAO4G,EAActC,GAAQrE,OAC/B,QACE,GAAIyG,EACF,OAAOF,GAAa,EAAIG,EAAYrC,GAAQrE,OAE9CsE,GAAY,GAAKA,GAAUsC,cAC3BH,GAAc,EAGtB,CAGA,SAASI,EAAcvC,EAAU7D,EAAOC,GACtC,IAAI+F,GAAc,EAclB,SALcb,IAAVnF,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQqG,KAAK9G,OACf,MAAO,GAOT,SAJY4F,IAARlF,GAAqBA,EAAMoG,KAAK9G,UAClCU,EAAMoG,KAAK9G,QAGTU,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACTD,KAAW,GAGT,MAAO,GAKT,IAFK6D,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAOyC,EAASD,KAAMrG,EAAOC,GAE/B,IAAK,OACL,IAAK,QACH,OAAOsG,EAAUF,KAAMrG,EAAOC,GAEhC,IAAK,QACH,OAAOuG,EAAWH,KAAMrG,EAAOC,GAEjC,IAAK,SACL,IAAK,SACH,OAAOwG,EAAYJ,KAAMrG,EAAOC,GAElC,IAAK,SACH,OAAOyG,EAAYL,KAAMrG,EAAOC,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO0G,EAAaN,KAAMrG,EAAOC,GAEnC,QACE,GAAI+F,EAAa,MAAM,IAAIvC,UAAU,qBAAuBI,GAC5DA,GAAYA,EAAW,IAAIsC,cAC3BH,GAAc,EAGtB,CAUA,SAASY,EAAM7B,EAAG8B,EAAGvF,GACnB,MAAMjC,EAAI0F,EAAE8B,GACZ9B,EAAE8B,GAAK9B,EAAEzD,GACTyD,EAAEzD,GAAKjC,CACT,CA2IA,SAASyH,EAAsB9F,EAAQ+F,EAAKrC,EAAYb,EAAUmD,GAEhE,GAAsB,IAAlBhG,EAAOzB,OAAc,OAAQ,EAmBjC,GAhB0B,iBAAfmF,GACTb,EAAWa,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAGZU,EADJV,GAAcA,KAGZA,EAAasC,EAAM,EAAKhG,EAAOzB,OAAS,GAItCmF,EAAa,IAAGA,EAAa1D,EAAOzB,OAASmF,GAC7CA,GAAc1D,EAAOzB,OAAQ,CAC/B,GAAIyH,EAAK,OAAQ,EACZtC,EAAa1D,EAAOzB,OAAS,CACtC,MAAS,GAAImF,EAAa,EAAG,CACzB,IAAIsC,EACC,OAAQ,EADJtC,EAAa,CAEvB,CAQD,GALmB,iBAARqC,IACTA,EAAMnE,EAAOe,KAAKoD,EAAKlD,IAIrBjB,EAAOqC,SAAS8B,GAElB,OAAmB,IAAfA,EAAIxH,QACE,EAEH0H,EAAajG,EAAQ+F,EAAKrC,EAAYb,EAAUmD,GAClD,GAAmB,iBAARD,EAEhB,OADAA,GAAY,IACgC,mBAAjC7H,WAAWoE,UAAUzD,QAC1BmH,EACK9H,WAAWoE,UAAUzD,QAAQqH,KAAKlG,EAAQ+F,EAAKrC,GAE/CxF,WAAWoE,UAAU6D,YAAYD,KAAKlG,EAAQ+F,EAAKrC,GAGvDuC,EAAajG,EAAQ,CAAC+F,GAAMrC,EAAYb,EAAUmD,GAG3D,MAAM,IAAIvD,UAAU,uCACtB,CAEA,SAASwD,EAAcxG,EAAKsG,EAAKrC,EAAYb,EAAUmD,GACrD,IA0BI3H,EA1BA+H,EAAY,EACZC,EAAY5G,EAAIlB,OAChB+H,EAAYP,EAAIxH,OAEpB,QAAiB4F,IAAbtB,IAEe,UADjBA,EAAW0D,OAAO1D,GAAUsC,gBACY,UAAbtC,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAIpD,EAAIlB,OAAS,GAAKwH,EAAIxH,OAAS,EACjC,OAAQ,EAEV6H,EAAY,EACZC,GAAa,EACbC,GAAa,EACb5C,GAAc,CACf,CAGH,SAAS8C,EAAMrE,EAAK9D,GAClB,OAAkB,IAAd+H,EACKjE,EAAI9D,GAEJ8D,EAAIsE,aAAapI,EAAI+H,EAE/B,CAGD,GAAIJ,EAAK,CACP,IAAIU,GAAc,EAClB,IAAKrI,EAAIqF,EAAYrF,EAAIgI,EAAWhI,IAClC,GAAImI,EAAK/G,EAAKpB,KAAOmI,EAAKT,GAAqB,IAAhBW,EAAoB,EAAIrI,EAAIqI,IAEzD,IADoB,IAAhBA,IAAmBA,EAAarI,GAChCA,EAAIqI,EAAa,IAAMJ,EAAW,OAAOI,EAAaN,OAEtC,IAAhBM,IAAmBrI,GAAKA,EAAIqI,GAChCA,GAAc,CAGtB,MAEI,IADIhD,EAAa4C,EAAYD,IAAW3C,EAAa2C,EAAYC,GAC5DjI,EAAIqF,EAAYrF,GAAK,EAAGA,IAAK,CAChC,IAAIsI,GAAQ,EACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAWM,IAC7B,GAAIJ,EAAK/G,EAAKpB,EAAIuI,KAAOJ,EAAKT,EAAKa,GAAI,CACrCD,GAAQ,EACR,KACD,CAEH,GAAIA,EAAO,OAAOtI,CACnB,CAGH,OAAQ,CACV,CAcA,SAASwI,EAAU1E,EAAKS,EAAQ3C,EAAQ1B,GACtC0B,EAAS6G,OAAO7G,IAAW,EAC3B,MAAM8G,EAAY5E,EAAI5D,OAAS0B,EAC1B1B,GAGHA,EAASuI,OAAOvI,IACHwI,IACXxI,EAASwI,GAJXxI,EAASwI,EAQX,MAAMC,EAASpE,EAAOrE,OAKtB,IAAIF,EACJ,IAJIE,EAASyI,EAAS,IACpBzI,EAASyI,EAAS,GAGf3I,EAAI,EAAGA,EAAIE,IAAUF,EAAG,CAC3B,MAAM4I,EAASC,SAAStE,EAAOuE,OAAW,EAAJ9I,EAAO,GAAI,IACjD,GAAI+F,EAAY6C,GAAS,OAAO5I,EAChC8D,EAAIlC,EAAS5B,GAAK4I,CACnB,CACD,OAAO5I,CACT,CAEA,SAAS+I,EAAWjF,EAAKS,EAAQ3C,EAAQ1B,GACvC,OAAO8I,EAAWpC,EAAYrC,EAAQT,EAAI5D,OAAS0B,GAASkC,EAAKlC,EAAQ1B,EAC3E,CAEA,SAAS+I,EAAYnF,EAAKS,EAAQ3C,EAAQ1B,GACxC,OAAO8I,EAypCT,SAAuBE,GACrB,MAAMC,EAAY,GAClB,IAAK,IAAInJ,EAAI,EAAGA,EAAIkJ,EAAIhJ,SAAUF,EAEhCmJ,EAAUpI,KAAyB,IAApBmI,EAAI/I,WAAWH,IAEhC,OAAOmJ,CACT,CAhqCoBC,CAAa7E,GAAST,EAAKlC,EAAQ1B,EACvD,CAEA,SAASmJ,EAAavF,EAAKS,EAAQ3C,EAAQ1B,GACzC,OAAO8I,EAAWnC,EAActC,GAAST,EAAKlC,EAAQ1B,EACxD,CAEA,SAASoJ,EAAWxF,EAAKS,EAAQ3C,EAAQ1B,GACvC,OAAO8I,EA0pCT,SAAyBE,EAAKK,GAC5B,IAAI1G,EAAG2G,EAAIC,EACX,MAAMN,EAAY,GAClB,IAAK,IAAInJ,EAAI,EAAGA,EAAIkJ,EAAIhJ,WACjBqJ,GAAS,GAAK,KADavJ,EAGhC6C,EAAIqG,EAAI/I,WAAWH,GACnBwJ,EAAK3G,GAAK,EACV4G,EAAK5G,EAAI,IACTsG,EAAUpI,KAAK0I,GACfN,EAAUpI,KAAKyI,GAGjB,OAAOL,CACT,CAxqCoBO,CAAenF,EAAQT,EAAI5D,OAAS0B,GAASkC,EAAKlC,EAAQ1B,EAC9E,CA8EA,SAASmH,EAAavD,EAAKnD,EAAOC,GAChC,OACS+I,EAAOC,cADF,IAAVjJ,GAAeC,IAAQkD,EAAI5D,OACD4D,EAEAA,EAAIe,MAAMlE,EAAOC,GAEjD,CAEA,SAASsG,EAAWpD,EAAKnD,EAAOC,GAC9BA,EAAM8B,KAAKmH,IAAI/F,EAAI5D,OAAQU,GAC3B,MAAMkJ,EAAM,GAEZ,IAAI9J,EAAIW,EACR,KAAOX,EAAIY,GAAK,CACd,MAAMmJ,EAAYjG,EAAI9D,GACtB,IAAIgK,EAAY,KACZC,EAAoBF,EAAY,IAChC,EACCA,EAAY,IACT,EACCA,EAAY,IACT,EACA,EAEZ,GAAI/J,EAAIiK,GAAoBrJ,EAAK,CAC/B,IAAIsJ,EAAYC,EAAWC,EAAYC,EAEvC,OAAQJ,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EACHG,EAAapG,EAAI9D,EAAI,GACO,MAAV,IAAbkK,KACHG,GAA6B,GAAZN,IAAqB,EAAoB,GAAbG,EACzCG,EAAgB,MAClBL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAapG,EAAI9D,EAAI,GACrBmK,EAAYrG,EAAI9D,EAAI,GACQ,MAAV,IAAbkK,IAAsD,MAAV,IAAZC,KACnCE,GAA6B,GAAZN,IAAoB,IAAoB,GAAbG,IAAsB,EAAmB,GAAZC,EACrEE,EAAgB,OAAUA,EAAgB,OAAUA,EAAgB,SACtEL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAapG,EAAI9D,EAAI,GACrBmK,EAAYrG,EAAI9D,EAAI,GACpBoK,EAAatG,EAAI9D,EAAI,GACO,MAAV,IAAbkK,IAAsD,MAAV,IAAZC,IAAsD,MAAV,IAAbC,KAClEC,GAA6B,GAAZN,IAAoB,IAAqB,GAAbG,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,EAClGC,EAAgB,OAAUA,EAAgB,UAC5CL,EAAYK,IAIrB,CAEiB,OAAdL,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbF,EAAI/I,KAAKiJ,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBF,EAAI/I,KAAKiJ,GACThK,GAAKiK,CACN,CAED,OAQF,SAAgCK,GAC9B,MAAMrK,EAAMqK,EAAWpK,OACvB,GAAID,GAAOsK,EACT,OAAOrC,OAAOsC,aAAaC,MAAMvC,OAAQoC,GAI3C,IAAIR,EAAM,GACN9J,EAAI,EACR,KAAOA,EAAIC,GACT6J,GAAO5B,OAAOsC,aAAaC,MACzBvC,OACAoC,EAAWzF,MAAM7E,EAAGA,GAAKuK,IAG7B,OAAOT,CACT,CAxBSY,CAAsBZ,EAC/B,CA3+BAxG,EAAAqH,WAAqBhH,GAgBrBJ,EAAOqH,oBAUP,WAEE,IACE,MAAMxJ,EAAM,IAAIvB,WAAW,GACrBgL,EAAQ,CAAEC,IAAK,WAAc,OAAO,EAAE,GAG5C,OAFA/G,OAAOC,eAAe6G,EAAOhL,WAAWoE,WACxCF,OAAOC,eAAe5C,EAAKyJ,GACN,KAAdzJ,EAAI0J,KACZ,CAAC,MAAO9I,GACP,OAAO,CACR,CACH,CArB6B+I,KAEyB,oBAAZC,SACb,mBAAlBA,QAAQC,OACjBD,QAAQC,MACN,iJAkBJlH,OAAOmH,eAAe3H,EAAOU,UAAW,SAAU,CAChDkH,YAAY,EACZC,IAAK,WACH,GAAK7H,EAAOqC,SAASoB,MACrB,OAAOA,KAAKrF,MACb,IAGHoC,OAAOmH,eAAe3H,EAAOU,UAAW,SAAU,CAChDkH,YAAY,EACZC,IAAK,WACH,GAAK7H,EAAOqC,SAASoB,MACrB,OAAOA,KAAK3B,UACb,IAoCH9B,EAAO8H,SAAW,KA8DlB9H,EAAOe,KAAO,SAAU1B,EAAOuB,EAAkBjE,GAC/C,OAAOoE,EAAK1B,EAAOuB,EAAkBjE,EACvC,EAIA6D,OAAOC,eAAeT,EAAOU,UAAWpE,WAAWoE,WACnDF,OAAOC,eAAeT,EAAQ1D,YA8B9B0D,EAAOE,MAAQ,SAAU6C,EAAMgF,EAAM9G,GACnC,OArBF,SAAgB8B,EAAMgF,EAAM9G,GAE1B,OADA6B,EAAWC,GACPA,GAAQ,EACH1C,EAAa0C,QAETR,IAATwF,EAIyB,iBAAb9G,EACVZ,EAAa0C,GAAMgF,KAAKA,EAAM9G,GAC9BZ,EAAa0C,GAAMgF,KAAKA,GAEvB1H,EAAa0C,EACtB,CAOS7C,CAAM6C,EAAMgF,EAAM9G,EAC3B,EAUAjB,EAAOc,YAAc,SAAUiC,GAC7B,OAAOjC,EAAYiC,EACrB,EAIA/C,EAAOgI,gBAAkB,SAAUjF,GACjC,OAAOjC,EAAYiC,EACrB,EA6GA/C,EAAOqC,SAAW,SAAmBF,GACnC,OAAY,MAALA,IAA6B,IAAhBA,EAAE8F,WACpB9F,IAAMnC,EAAOU,SACjB,EAEAV,EAAOkI,QAAU,SAAkBC,EAAGhG,GAGpC,GAFIR,EAAWwG,EAAG7L,cAAa6L,EAAInI,EAAOe,KAAKoH,EAAGA,EAAE9J,OAAQ8J,EAAEhH,aAC1DQ,EAAWQ,EAAG7F,cAAa6F,EAAInC,EAAOe,KAAKoB,EAAGA,EAAE9D,OAAQ8D,EAAEhB,cACzDnB,EAAOqC,SAAS8F,KAAOnI,EAAOqC,SAASF,GAC1C,MAAM,IAAItB,UACR,yEAIJ,GAAIsH,IAAMhG,EAAG,OAAO,EAEpB,IAAIiG,EAAID,EAAExL,OACN0L,EAAIlG,EAAExF,OAEV,IAAK,IAAIF,EAAI,EAAGC,EAAMyC,KAAKmH,IAAI8B,EAAGC,GAAI5L,EAAIC,IAAOD,EAC/C,GAAI0L,EAAE1L,KAAO0F,EAAE1F,GAAI,CACjB2L,EAAID,EAAE1L,GACN4L,EAAIlG,EAAE1F,GACN,KACD,CAGH,OAAI2L,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACT,EAEApI,EAAOkB,WAAa,SAAqBD,GACvC,OAAQ0D,OAAO1D,GAAUsC,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,EAEb,EAEAvD,EAAOsI,OAAS,SAAiBC,EAAM5L,GACrC,IAAKJ,MAAMmG,QAAQ6F,GACjB,MAAM,IAAI1H,UAAU,+CAGtB,GAAoB,IAAhB0H,EAAK5L,OACP,OAAOqD,EAAOE,MAAM,GAGtB,IAAIzD,EACJ,QAAe8F,IAAX5F,EAEF,IADAA,EAAS,EACJF,EAAI,EAAGA,EAAI8L,EAAK5L,SAAUF,EAC7BE,GAAU4L,EAAK9L,GAAGE,OAItB,MAAMyB,EAAS4B,EAAOc,YAAYnE,GAClC,IAAI6L,EAAM,EACV,IAAK/L,EAAI,EAAGA,EAAI8L,EAAK5L,SAAUF,EAAG,CAChC,IAAI8D,EAAMgI,EAAK9L,GACf,GAAIkF,EAAWpB,EAAKjE,YACdkM,EAAMjI,EAAI5D,OAASyB,EAAOzB,QACvBqD,EAAOqC,SAAS9B,KAAMA,EAAMP,EAAOe,KAAKR,IAC7CA,EAAIqB,KAAKxD,EAAQoK,IAEjBlM,WAAWoE,UAAU+H,IAAInE,KACvBlG,EACAmC,EACAiI,OAGC,KAAKxI,EAAOqC,SAAS9B,GAC1B,MAAM,IAAIM,UAAU,+CAEpBN,EAAIqB,KAAKxD,EAAQoK,EAClB,CACDA,GAAOjI,EAAI5D,MACZ,CACD,OAAOyB,CACT,EAiDA4B,EAAOmB,WAAaA,EA8EpBnB,EAAOU,UAAUuH,WAAY,EAQ7BjI,EAAOU,UAAUgI,OAAS,WACxB,MAAMhM,EAAM+G,KAAK9G,OACjB,GAAID,EAAM,GAAM,EACd,MAAM,IAAI4D,WAAW,6CAEvB,IAAK,IAAI7D,EAAI,EAAGA,EAAIC,EAAKD,GAAK,EAC5BuH,EAAKP,KAAMhH,EAAGA,EAAI,GAEpB,OAAOgH,IACT,EAEAzD,EAAOU,UAAUiI,OAAS,WACxB,MAAMjM,EAAM+G,KAAK9G,OACjB,GAAID,EAAM,GAAM,EACd,MAAM,IAAI4D,WAAW,6CAEvB,IAAK,IAAI7D,EAAI,EAAGA,EAAIC,EAAKD,GAAK,EAC5BuH,EAAKP,KAAMhH,EAAGA,EAAI,GAClBuH,EAAKP,KAAMhH,EAAI,EAAGA,EAAI,GAExB,OAAOgH,IACT,EAEAzD,EAAOU,UAAUkI,OAAS,WACxB,MAAMlM,EAAM+G,KAAK9G,OACjB,GAAID,EAAM,GAAM,EACd,MAAM,IAAI4D,WAAW,6CAEvB,IAAK,IAAI7D,EAAI,EAAGA,EAAIC,EAAKD,GAAK,EAC5BuH,EAAKP,KAAMhH,EAAGA,EAAI,GAClBuH,EAAKP,KAAMhH,EAAI,EAAGA,EAAI,GACtBuH,EAAKP,KAAMhH,EAAI,EAAGA,EAAI,GACtBuH,EAAKP,KAAMhH,EAAI,EAAGA,EAAI,GAExB,OAAOgH,IACT,EAEAzD,EAAOU,UAAUuC,SAAW,WAC1B,MAAMtG,EAAS8G,KAAK9G,OACpB,OAAe,IAAXA,EAAqB,GACA,IAArBwG,UAAUxG,OAAqBgH,EAAUF,KAAM,EAAG9G,GAC/C6G,EAAa0D,MAAMzD,KAAMN,UAClC,EAEAnD,EAAOU,UAAUmI,eAAiB7I,EAAOU,UAAUuC,SAEnDjD,EAAOU,UAAUoI,OAAS,SAAiB3G,GACzC,IAAKnC,EAAOqC,SAASF,GAAI,MAAM,IAAItB,UAAU,6BAC7C,OAAI4C,OAAStB,GACsB,IAA5BnC,EAAOkI,QAAQzE,KAAMtB,EAC9B,EAEAnC,EAAOU,UAAUqI,QAAU,WACzB,IAAIpD,EAAM,GACV,MAAMqD,EAAMjJ,EAAQI,kBAGpB,OAFAwF,EAAMlC,KAAKR,SAAS,MAAO,EAAG+F,GAAKC,QAAQ,UAAW,OAAOC,OACzDzF,KAAK9G,OAASqM,IAAKrD,GAAO,SACvB,WAAaA,EAAM,GAC5B,EACI9F,IACFG,EAAOU,UAAUb,GAAuBG,EAAOU,UAAUqI,SAG3D/I,EAAOU,UAAUwH,QAAU,SAAkBiB,EAAQ/L,EAAOC,EAAK+L,EAAWC,GAI1E,GAHI1H,EAAWwH,EAAQ7M,cACrB6M,EAASnJ,EAAOe,KAAKoI,EAAQA,EAAO9K,OAAQ8K,EAAOhI,cAEhDnB,EAAOqC,SAAS8G,GACnB,MAAM,IAAItI,UACR,wFAC2BsI,GAiB/B,QAbc5G,IAAVnF,IACFA,EAAQ,QAEEmF,IAARlF,IACFA,EAAM8L,EAASA,EAAOxM,OAAS,QAEf4F,IAAd6G,IACFA,EAAY,QAEE7G,IAAZ8G,IACFA,EAAU5F,KAAK9G,QAGbS,EAAQ,GAAKC,EAAM8L,EAAOxM,QAAUyM,EAAY,GAAKC,EAAU5F,KAAK9G,OACtE,MAAM,IAAI2D,WAAW,sBAGvB,GAAI8I,GAAaC,GAAWjM,GAASC,EACnC,OAAO,EAET,GAAI+L,GAAaC,EACf,OAAQ,EAEV,GAAIjM,GAASC,EACX,OAAO,EAQT,GAAIoG,OAAS0F,EAAQ,OAAO,EAE5B,IAAIf,GAJJiB,KAAa,IADbD,KAAe,GAMXf,GAPJhL,KAAS,IADTD,KAAW,GASX,MAAMV,EAAMyC,KAAKmH,IAAI8B,EAAGC,GAElBiB,EAAW7F,KAAKnC,MAAM8H,EAAWC,GACjCE,EAAaJ,EAAO7H,MAAMlE,EAAOC,GAEvC,IAAK,IAAIZ,EAAI,EAAGA,EAAIC,IAAOD,EACzB,GAAI6M,EAAS7M,KAAO8M,EAAW9M,GAAI,CACjC2L,EAAIkB,EAAS7M,GACb4L,EAAIkB,EAAW9M,GACf,KACD,CAGH,OAAI2L,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACT,EA2HApI,EAAOU,UAAU8I,SAAW,SAAmBrF,EAAKrC,EAAYb,GAC9D,OAAoD,IAA7CwC,KAAKxG,QAAQkH,EAAKrC,EAAYb,EACvC,EAEAjB,EAAOU,UAAUzD,QAAU,SAAkBkH,EAAKrC,EAAYb,GAC5D,OAAOiD,EAAqBT,KAAMU,EAAKrC,EAAYb,GAAU,EAC/D,EAEAjB,EAAOU,UAAU6D,YAAc,SAAsBJ,EAAKrC,EAAYb,GACpE,OAAOiD,EAAqBT,KAAMU,EAAKrC,EAAYb,GAAU,EAC/D,EA4CAjB,EAAOU,UAAUW,MAAQ,SAAgBL,EAAQ3C,EAAQ1B,EAAQsE,GAE/D,QAAesB,IAAXlE,EACF4C,EAAW,OACXtE,EAAS8G,KAAK9G,OACd0B,EAAS,OAEJ,QAAekE,IAAX5F,GAA0C,iBAAX0B,EACxC4C,EAAW5C,EACX1B,EAAS8G,KAAK9G,OACd0B,EAAS,MAEJ,KAAIoL,SAASpL,GAUlB,MAAM,IAAItB,MACR,2EAVFsB,KAAoB,EAChBoL,SAAS9M,IACXA,KAAoB,OACH4F,IAAbtB,IAAwBA,EAAW,UAEvCA,EAAWtE,EACXA,OAAS4F,EAMZ,CAED,MAAM4C,EAAY1B,KAAK9G,OAAS0B,EAGhC,SAFekE,IAAX5F,GAAwBA,EAASwI,KAAWxI,EAASwI,GAEpDnE,EAAOrE,OAAS,IAAMA,EAAS,GAAK0B,EAAS,IAAOA,EAASoF,KAAK9G,OACrE,MAAM,IAAI2D,WAAW,0CAGlBW,IAAUA,EAAW,QAE1B,IAAImC,GAAc,EAClB,OACE,OAAQnC,GACN,IAAK,MACH,OAAOgE,EAASxB,KAAMzC,EAAQ3C,EAAQ1B,GAExC,IAAK,OACL,IAAK,QACH,OAAO6I,EAAU/B,KAAMzC,EAAQ3C,EAAQ1B,GAEzC,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAO+I,EAAWjC,KAAMzC,EAAQ3C,EAAQ1B,GAE1C,IAAK,SAEH,OAAOmJ,EAAYrC,KAAMzC,EAAQ3C,EAAQ1B,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOoJ,EAAUtC,KAAMzC,EAAQ3C,EAAQ1B,GAEzC,QACE,GAAIyG,EAAa,MAAM,IAAIvC,UAAU,qBAAuBI,GAC5DA,GAAY,GAAKA,GAAUsC,cAC3BH,GAAc,EAGtB,EAEApD,EAAOU,UAAUgJ,OAAS,WACxB,MAAO,CACLjH,KAAM,SACNE,KAAMpG,MAAMmE,UAAUY,MAAMgD,KAAKb,KAAKkG,MAAQlG,KAAM,GAExD,EAyFA,MAAMuD,EAAuB,KAoB7B,SAASpD,EAAYrD,EAAKnD,EAAOC,GAC/B,IAAIuM,EAAM,GACVvM,EAAM8B,KAAKmH,IAAI/F,EAAI5D,OAAQU,GAE3B,IAAK,IAAIZ,EAAIW,EAAOX,EAAIY,IAAOZ,EAC7BmN,GAAOjF,OAAOsC,aAAsB,IAAT1G,EAAI9D,IAEjC,OAAOmN,CACT,CAEA,SAAS/F,EAAatD,EAAKnD,EAAOC,GAChC,IAAIuM,EAAM,GACVvM,EAAM8B,KAAKmH,IAAI/F,EAAI5D,OAAQU,GAE3B,IAAK,IAAIZ,EAAIW,EAAOX,EAAIY,IAAOZ,EAC7BmN,GAAOjF,OAAOsC,aAAa1G,EAAI9D,IAEjC,OAAOmN,CACT,CAEA,SAASlG,EAAUnD,EAAKnD,EAAOC,GAC7B,MAAMX,EAAM6D,EAAI5D,SAEXS,GAASA,EAAQ,KAAGA,EAAQ,KAC5BC,GAAOA,EAAM,GAAKA,EAAMX,KAAKW,EAAMX,GAExC,IAAImN,EAAM,GACV,IAAK,IAAIpN,EAAIW,EAAOX,EAAIY,IAAOZ,EAC7BoN,GAAOC,EAAoBvJ,EAAI9D,IAEjC,OAAOoN,CACT,CAEA,SAAS9F,EAAcxD,EAAKnD,EAAOC,GACjC,MAAM0M,EAAQxJ,EAAIe,MAAMlE,EAAOC,GAC/B,IAAIkJ,EAAM,GAEV,IAAK,IAAI9J,EAAI,EAAGA,EAAIsN,EAAMpN,OAAS,EAAGF,GAAK,EACzC8J,GAAO5B,OAAOsC,aAAa8C,EAAMtN,GAAqB,IAAfsN,EAAMtN,EAAI,IAEnD,OAAO8J,CACT,CAiCA,SAASyD,EAAa3L,EAAQ4L,EAAKtN,GACjC,GAAK0B,EAAS,GAAO,GAAKA,EAAS,EAAG,MAAM,IAAIiC,WAAW,sBAC3D,GAAIjC,EAAS4L,EAAMtN,EAAQ,MAAM,IAAI2D,WAAW,wCAClD,CAyQA,SAAS4J,EAAU3J,EAAKlB,EAAOhB,EAAQ4L,EAAKjB,EAAK1C,GAC/C,IAAKtG,EAAOqC,SAAS9B,GAAM,MAAM,IAAIM,UAAU,+CAC/C,GAAIxB,EAAQ2J,GAAO3J,EAAQiH,EAAK,MAAM,IAAIhG,WAAW,qCACrD,GAAIjC,EAAS4L,EAAM1J,EAAI5D,OAAQ,MAAM,IAAI2D,WAAW,qBACtD,CA+FA,SAAS6J,EAAgB5J,EAAKlB,EAAOhB,EAAQiI,EAAK0C,GAChDoB,EAAW/K,EAAOiH,EAAK0C,EAAKzI,EAAKlC,EAAQ,GAEzC,IAAI6H,EAAKhB,OAAO7F,EAAQgL,OAAO,aAC/B9J,EAAIlC,KAAY6H,EAChBA,IAAW,EACX3F,EAAIlC,KAAY6H,EAChBA,IAAW,EACX3F,EAAIlC,KAAY6H,EAChBA,IAAW,EACX3F,EAAIlC,KAAY6H,EAChB,IAAID,EAAKf,OAAO7F,GAASgL,OAAO,IAAMA,OAAO,aAQ7C,OAPA9J,EAAIlC,KAAY4H,EAChBA,IAAW,EACX1F,EAAIlC,KAAY4H,EAChBA,IAAW,EACX1F,EAAIlC,KAAY4H,EAChBA,IAAW,EACX1F,EAAIlC,KAAY4H,EACT5H,CACT,CAEA,SAASiM,EAAgB/J,EAAKlB,EAAOhB,EAAQiI,EAAK0C,GAChDoB,EAAW/K,EAAOiH,EAAK0C,EAAKzI,EAAKlC,EAAQ,GAEzC,IAAI6H,EAAKhB,OAAO7F,EAAQgL,OAAO,aAC/B9J,EAAIlC,EAAS,GAAK6H,EAClBA,IAAW,EACX3F,EAAIlC,EAAS,GAAK6H,EAClBA,IAAW,EACX3F,EAAIlC,EAAS,GAAK6H,EAClBA,IAAW,EACX3F,EAAIlC,EAAS,GAAK6H,EAClB,IAAID,EAAKf,OAAO7F,GAASgL,OAAO,IAAMA,OAAO,aAQ7C,OAPA9J,EAAIlC,EAAS,GAAK4H,EAClBA,IAAW,EACX1F,EAAIlC,EAAS,GAAK4H,EAClBA,IAAW,EACX1F,EAAIlC,EAAS,GAAK4H,EAClBA,IAAW,EACX1F,EAAIlC,GAAU4H,EACP5H,EAAS,CAClB,CAkHA,SAASkM,EAAchK,EAAKlB,EAAOhB,EAAQ4L,EAAKjB,EAAK1C,GACnD,GAAIjI,EAAS4L,EAAM1J,EAAI5D,OAAQ,MAAM,IAAI2D,WAAW,sBACpD,GAAIjC,EAAS,EAAG,MAAM,IAAIiC,WAAW,qBACvC,CAEA,SAASkK,EAAYjK,EAAKlB,EAAOhB,EAAQoM,EAAcC,GAOrD,OANArL,GAASA,EACThB,KAAoB,EACfqM,GACHH,EAAahK,EAAKlB,EAAOhB,EAAQ,GAEnCsM,EAAQtJ,MAAMd,EAAKlB,EAAOhB,EAAQoM,EAAc,GAAI,GAC7CpM,EAAS,CAClB,CAUA,SAASuM,EAAarK,EAAKlB,EAAOhB,EAAQoM,EAAcC,GAOtD,OANArL,GAASA,EACThB,KAAoB,EACfqM,GACHH,EAAahK,EAAKlB,EAAOhB,EAAQ,GAEnCsM,EAAQtJ,MAAMd,EAAKlB,EAAOhB,EAAQoM,EAAc,GAAI,GAC7CpM,EAAS,CAClB,CAzkBA2B,EAAOU,UAAUY,MAAQ,SAAgBlE,EAAOC,GAC9C,MAAMX,EAAM+G,KAAK9G,QACjBS,IAAUA,GAGE,GACVA,GAASV,GACG,IAAGU,EAAQ,GACdA,EAAQV,IACjBU,EAAQV,IANVW,OAAckF,IAARlF,EAAoBX,IAAQW,GASxB,GACRA,GAAOX,GACG,IAAGW,EAAM,GACVA,EAAMX,IACfW,EAAMX,GAGJW,EAAMD,IAAOC,EAAMD,GAEvB,MAAMyN,EAASpH,KAAKqH,SAAS1N,EAAOC,GAIpC,OAFAmD,OAAOC,eAAeoK,EAAQ7K,EAAOU,WAE9BmK,CACT,EAUA7K,EAAOU,UAAUqK,WACjB/K,EAAOU,UAAUsK,WAAa,SAAqB3M,EAAQ8C,EAAYuJ,GACrErM,KAAoB,EACpB8C,KAA4B,EACvBuJ,GAAUV,EAAY3L,EAAQ8C,EAAYsC,KAAK9G,QAEpD,IAAIwH,EAAMV,KAAKpF,GACX4M,EAAM,EACNxO,EAAI,EACR,OAASA,EAAI0E,IAAe8J,GAAO,MACjC9G,GAAOV,KAAKpF,EAAS5B,GAAKwO,EAG5B,OAAO9G,CACT,EAEAnE,EAAOU,UAAUwK,WACjBlL,EAAOU,UAAUyK,WAAa,SAAqB9M,EAAQ8C,EAAYuJ,GACrErM,KAAoB,EACpB8C,KAA4B,EACvBuJ,GACHV,EAAY3L,EAAQ8C,EAAYsC,KAAK9G,QAGvC,IAAIwH,EAAMV,KAAKpF,IAAW8C,GACtB8J,EAAM,EACV,KAAO9J,EAAa,IAAM8J,GAAO,MAC/B9G,GAAOV,KAAKpF,IAAW8C,GAAc8J,EAGvC,OAAO9G,CACT,EAEAnE,EAAOU,UAAU0K,UACjBpL,EAAOU,UAAU2K,UAAY,SAAoBhN,EAAQqM,GAGvD,OAFArM,KAAoB,EACfqM,GAAUV,EAAY3L,EAAQ,EAAGoF,KAAK9G,QACpC8G,KAAKpF,EACd,EAEA2B,EAAOU,UAAU4K,aACjBtL,EAAOU,UAAU6K,aAAe,SAAuBlN,EAAQqM,GAG7D,OAFArM,KAAoB,EACfqM,GAAUV,EAAY3L,EAAQ,EAAGoF,KAAK9G,QACpC8G,KAAKpF,GAAWoF,KAAKpF,EAAS,IAAM,CAC7C,EAEA2B,EAAOU,UAAU8K,aACjBxL,EAAOU,UAAUmE,aAAe,SAAuBxG,EAAQqM,GAG7D,OAFArM,KAAoB,EACfqM,GAAUV,EAAY3L,EAAQ,EAAGoF,KAAK9G,QACnC8G,KAAKpF,IAAW,EAAKoF,KAAKpF,EAAS,EAC7C,EAEA2B,EAAOU,UAAU+K,aACjBzL,EAAOU,UAAUgL,aAAe,SAAuBrN,EAAQqM,GAI7D,OAHArM,KAAoB,EACfqM,GAAUV,EAAY3L,EAAQ,EAAGoF,KAAK9G,SAElC8G,KAAKpF,GACToF,KAAKpF,EAAS,IAAM,EACpBoF,KAAKpF,EAAS,IAAM,IACD,SAAnBoF,KAAKpF,EAAS,EACrB,EAEA2B,EAAOU,UAAUiL,aACjB3L,EAAOU,UAAUkL,aAAe,SAAuBvN,EAAQqM,GAI7D,OAHArM,KAAoB,EACfqM,GAAUV,EAAY3L,EAAQ,EAAGoF,KAAK9G,QAEpB,SAAf8G,KAAKpF,IACToF,KAAKpF,EAAS,IAAM,GACrBoF,KAAKpF,EAAS,IAAM,EACrBoF,KAAKpF,EAAS,GAClB,EAEA2B,EAAOU,UAAUmL,gBAAkBC,EAAmB,SAA0BzN,GAE9E0N,EADA1N,KAAoB,EACG,UACvB,MAAM2N,EAAQvI,KAAKpF,GACb4N,EAAOxI,KAAKpF,EAAS,QACbkE,IAAVyJ,QAAgCzJ,IAAT0J,GACzBC,EAAY7N,EAAQoF,KAAK9G,OAAS,GAGpC,MAAMuJ,EAAK8F,EACQ,IAAjBvI,OAAOpF,GACU,MAAjBoF,OAAOpF,GACPoF,OAAOpF,GAAU,GAAK,GAElB4H,EAAKxC,OAAOpF,GACC,IAAjBoF,OAAOpF,GACU,MAAjBoF,OAAOpF,GACP4N,EAAO,GAAK,GAEd,OAAO5B,OAAOnE,IAAOmE,OAAOpE,IAAOoE,OAAO,IAC5C,GAEArK,EAAOU,UAAUyL,gBAAkBL,EAAmB,SAA0BzN,GAE9E0N,EADA1N,KAAoB,EACG,UACvB,MAAM2N,EAAQvI,KAAKpF,GACb4N,EAAOxI,KAAKpF,EAAS,QACbkE,IAAVyJ,QAAgCzJ,IAAT0J,GACzBC,EAAY7N,EAAQoF,KAAK9G,OAAS,GAGpC,MAAMsJ,EAAK+F,EAAQ,GAAK,GACL,MAAjBvI,OAAOpF,GACU,IAAjBoF,OAAOpF,GACPoF,OAAOpF,GAEH6H,EAAKzC,OAAOpF,GAAU,GAAK,GACd,MAAjBoF,OAAOpF,GACU,IAAjBoF,OAAOpF,GACP4N,EAEF,OAAQ5B,OAAOpE,IAAOoE,OAAO,KAAOA,OAAOnE,EAC7C,GAEAlG,EAAOU,UAAU0L,UAAY,SAAoB/N,EAAQ8C,EAAYuJ,GACnErM,KAAoB,EACpB8C,KAA4B,EACvBuJ,GAAUV,EAAY3L,EAAQ8C,EAAYsC,KAAK9G,QAEpD,IAAIwH,EAAMV,KAAKpF,GACX4M,EAAM,EACNxO,EAAI,EACR,OAASA,EAAI0E,IAAe8J,GAAO,MACjC9G,GAAOV,KAAKpF,EAAS5B,GAAKwO,EAM5B,OAJAA,GAAO,IAEH9G,GAAO8G,IAAK9G,GAAOhF,KAAKC,IAAI,EAAG,EAAI+B,IAEhCgD,CACT,EAEAnE,EAAOU,UAAU2L,UAAY,SAAoBhO,EAAQ8C,EAAYuJ,GACnErM,KAAoB,EACpB8C,KAA4B,EACvBuJ,GAAUV,EAAY3L,EAAQ8C,EAAYsC,KAAK9G,QAEpD,IAAIF,EAAI0E,EACJ8J,EAAM,EACN9G,EAAMV,KAAKpF,IAAW5B,GAC1B,KAAOA,EAAI,IAAMwO,GAAO,MACtB9G,GAAOV,KAAKpF,IAAW5B,GAAKwO,EAM9B,OAJAA,GAAO,IAEH9G,GAAO8G,IAAK9G,GAAOhF,KAAKC,IAAI,EAAG,EAAI+B,IAEhCgD,CACT,EAEAnE,EAAOU,UAAU4L,SAAW,SAAmBjO,EAAQqM,GAGrD,OAFArM,KAAoB,EACfqM,GAAUV,EAAY3L,EAAQ,EAAGoF,KAAK9G,QACtB,IAAf8G,KAAKpF,IAC0B,GAA5B,IAAOoF,KAAKpF,GAAU,GADKoF,KAAKpF,EAE3C,EAEA2B,EAAOU,UAAU6L,YAAc,SAAsBlO,EAAQqM,GAC3DrM,KAAoB,EACfqM,GAAUV,EAAY3L,EAAQ,EAAGoF,KAAK9G,QAC3C,MAAMwH,EAAMV,KAAKpF,GAAWoF,KAAKpF,EAAS,IAAM,EAChD,OAAc,MAAN8F,EAAsB,WAANA,EAAmBA,CAC7C,EAEAnE,EAAOU,UAAU8L,YAAc,SAAsBnO,EAAQqM,GAC3DrM,KAAoB,EACfqM,GAAUV,EAAY3L,EAAQ,EAAGoF,KAAK9G,QAC3C,MAAMwH,EAAMV,KAAKpF,EAAS,GAAMoF,KAAKpF,IAAW,EAChD,OAAc,MAAN8F,EAAsB,WAANA,EAAmBA,CAC7C,EAEAnE,EAAOU,UAAU+L,YAAc,SAAsBpO,EAAQqM,GAI3D,OAHArM,KAAoB,EACfqM,GAAUV,EAAY3L,EAAQ,EAAGoF,KAAK9G,QAEnC8G,KAAKpF,GACVoF,KAAKpF,EAAS,IAAM,EACpBoF,KAAKpF,EAAS,IAAM,GACpBoF,KAAKpF,EAAS,IAAM,EACzB,EAEA2B,EAAOU,UAAUgM,YAAc,SAAsBrO,EAAQqM,GAI3D,OAHArM,KAAoB,EACfqM,GAAUV,EAAY3L,EAAQ,EAAGoF,KAAK9G,QAEnC8G,KAAKpF,IAAW,GACrBoF,KAAKpF,EAAS,IAAM,GACpBoF,KAAKpF,EAAS,IAAM,EACpBoF,KAAKpF,EAAS,EACnB,EAEA2B,EAAOU,UAAUiM,eAAiBb,EAAmB,SAAyBzN,GAE5E0N,EADA1N,KAAoB,EACG,UACvB,MAAM2N,EAAQvI,KAAKpF,GACb4N,EAAOxI,KAAKpF,EAAS,GAU3B,YATckE,IAAVyJ,QAAgCzJ,IAAT0J,GACzBC,EAAY7N,EAAQoF,KAAK9G,OAAS,IAQ5B0N,OALI5G,KAAKpF,EAAS,GACL,IAAnBoF,KAAKpF,EAAS,GACK,MAAnBoF,KAAKpF,EAAS,IACb4N,GAAQ,MAEY5B,OAAO,KAC5BA,OAAO2B,EACU,IAAjBvI,OAAOpF,GACU,MAAjBoF,OAAOpF,GACPoF,OAAOpF,GAAU,GAAK,GAC1B,GAEA2B,EAAOU,UAAUkM,eAAiBd,EAAmB,SAAyBzN,GAE5E0N,EADA1N,KAAoB,EACG,UACvB,MAAM2N,EAAQvI,KAAKpF,GACb4N,EAAOxI,KAAKpF,EAAS,QACbkE,IAAVyJ,QAAgCzJ,IAAT0J,GACzBC,EAAY7N,EAAQoF,KAAK9G,OAAS,GAGpC,MAAMwH,GAAO6H,GAAS,IACH,MAAjBvI,OAAOpF,GACU,IAAjBoF,OAAOpF,GACPoF,OAAOpF,GAET,OAAQgM,OAAOlG,IAAQkG,OAAO,KAC5BA,OAAO5G,OAAOpF,GAAU,GAAK,GACZ,MAAjBoF,OAAOpF,GACU,IAAjBoF,OAAOpF,GACP4N,EACJ,GAEAjM,EAAOU,UAAUmM,YAAc,SAAsBxO,EAAQqM,GAG3D,OAFArM,KAAoB,EACfqM,GAAUV,EAAY3L,EAAQ,EAAGoF,KAAK9G,QACpCgO,EAAQ/F,KAAKnB,KAAMpF,GAAQ,EAAM,GAAI,EAC9C,EAEA2B,EAAOU,UAAUoM,YAAc,SAAsBzO,EAAQqM,GAG3D,OAFArM,KAAoB,EACfqM,GAAUV,EAAY3L,EAAQ,EAAGoF,KAAK9G,QACpCgO,EAAQ/F,KAAKnB,KAAMpF,GAAQ,EAAO,GAAI,EAC/C,EAEA2B,EAAOU,UAAUqM,aAAe,SAAuB1O,EAAQqM,GAG7D,OAFArM,KAAoB,EACfqM,GAAUV,EAAY3L,EAAQ,EAAGoF,KAAK9G,QACpCgO,EAAQ/F,KAAKnB,KAAMpF,GAAQ,EAAM,GAAI,EAC9C,EAEA2B,EAAOU,UAAUsM,aAAe,SAAuB3O,EAAQqM,GAG7D,OAFArM,KAAoB,EACfqM,GAAUV,EAAY3L,EAAQ,EAAGoF,KAAK9G,QACpCgO,EAAQ/F,KAAKnB,KAAMpF,GAAQ,EAAO,GAAI,EAC/C,EAQA2B,EAAOU,UAAUuM,YACjBjN,EAAOU,UAAUwM,YAAc,SAAsB7N,EAAOhB,EAAQ8C,EAAYuJ,GAC9ErL,GAASA,EACThB,KAAoB,EACpB8C,KAA4B,EACvBuJ,GAEHR,EAASzG,KAAMpE,EAAOhB,EAAQ8C,EADbhC,KAAKC,IAAI,EAAG,EAAI+B,GAAc,EACK,GAGtD,IAAI8J,EAAM,EACNxO,EAAI,EAER,IADAgH,KAAKpF,GAAkB,IAARgB,IACN5C,EAAI0E,IAAe8J,GAAO,MACjCxH,KAAKpF,EAAS5B,GAAM4C,EAAQ4L,EAAO,IAGrC,OAAO5M,EAAS8C,CAClB,EAEAnB,EAAOU,UAAUyM,YACjBnN,EAAOU,UAAU0M,YAAc,SAAsB/N,EAAOhB,EAAQ8C,EAAYuJ,GAC9ErL,GAASA,EACThB,KAAoB,EACpB8C,KAA4B,EACvBuJ,GAEHR,EAASzG,KAAMpE,EAAOhB,EAAQ8C,EADbhC,KAAKC,IAAI,EAAG,EAAI+B,GAAc,EACK,GAGtD,IAAI1E,EAAI0E,EAAa,EACjB8J,EAAM,EAEV,IADAxH,KAAKpF,EAAS5B,GAAa,IAAR4C,IACV5C,GAAK,IAAMwO,GAAO,MACzBxH,KAAKpF,EAAS5B,GAAM4C,EAAQ4L,EAAO,IAGrC,OAAO5M,EAAS8C,CAClB,EAEAnB,EAAOU,UAAU2M,WACjBrN,EAAOU,UAAU4M,WAAa,SAAqBjO,EAAOhB,EAAQqM,GAKhE,OAJArL,GAASA,EACThB,KAAoB,EACfqM,GAAUR,EAASzG,KAAMpE,EAAOhB,EAAQ,EAAG,IAAM,GACtDoF,KAAKpF,GAAmB,IAARgB,EACThB,EAAS,CAClB,EAEA2B,EAAOU,UAAU6M,cACjBvN,EAAOU,UAAU8M,cAAgB,SAAwBnO,EAAOhB,EAAQqM,GAMtE,OALArL,GAASA,EACThB,KAAoB,EACfqM,GAAUR,EAASzG,KAAMpE,EAAOhB,EAAQ,EAAG,MAAQ,GACxDoF,KAAKpF,GAAmB,IAARgB,EAChBoE,KAAKpF,EAAS,GAAMgB,IAAU,EACvBhB,EAAS,CAClB,EAEA2B,EAAOU,UAAU+M,cACjBzN,EAAOU,UAAUgN,cAAgB,SAAwBrO,EAAOhB,EAAQqM,GAMtE,OALArL,GAASA,EACThB,KAAoB,EACfqM,GAAUR,EAASzG,KAAMpE,EAAOhB,EAAQ,EAAG,MAAQ,GACxDoF,KAAKpF,GAAWgB,IAAU,EAC1BoE,KAAKpF,EAAS,GAAc,IAARgB,EACbhB,EAAS,CAClB,EAEA2B,EAAOU,UAAUiN,cACjB3N,EAAOU,UAAUkN,cAAgB,SAAwBvO,EAAOhB,EAAQqM,GAQtE,OAPArL,GAASA,EACThB,KAAoB,EACfqM,GAAUR,EAASzG,KAAMpE,EAAOhB,EAAQ,EAAG,WAAY,GAC5DoF,KAAKpF,EAAS,GAAMgB,IAAU,GAC9BoE,KAAKpF,EAAS,GAAMgB,IAAU,GAC9BoE,KAAKpF,EAAS,GAAMgB,IAAU,EAC9BoE,KAAKpF,GAAmB,IAARgB,EACThB,EAAS,CAClB,EAEA2B,EAAOU,UAAUmN,cACjB7N,EAAOU,UAAUoN,cAAgB,SAAwBzO,EAAOhB,EAAQqM,GAQtE,OAPArL,GAASA,EACThB,KAAoB,EACfqM,GAAUR,EAASzG,KAAMpE,EAAOhB,EAAQ,EAAG,WAAY,GAC5DoF,KAAKpF,GAAWgB,IAAU,GAC1BoE,KAAKpF,EAAS,GAAMgB,IAAU,GAC9BoE,KAAKpF,EAAS,GAAMgB,IAAU,EAC9BoE,KAAKpF,EAAS,GAAc,IAARgB,EACbhB,EAAS,CAClB,EA8CA2B,EAAOU,UAAUqN,iBAAmBjC,EAAmB,SAA2BzM,EAAOhB,EAAS,GAChG,OAAO8L,EAAe1G,KAAMpE,EAAOhB,EAAQgM,OAAO,GAAIA,OAAO,sBAC/D,GAEArK,EAAOU,UAAUsN,iBAAmBlC,EAAmB,SAA2BzM,EAAOhB,EAAS,GAChG,OAAOiM,EAAe7G,KAAMpE,EAAOhB,EAAQgM,OAAO,GAAIA,OAAO,sBAC/D,GAEArK,EAAOU,UAAUuN,WAAa,SAAqB5O,EAAOhB,EAAQ8C,EAAYuJ,GAG5E,GAFArL,GAASA,EACThB,KAAoB,GACfqM,EAAU,CACb,MAAMwD,EAAQ/O,KAAKC,IAAI,EAAI,EAAI+B,EAAc,GAE7C+I,EAASzG,KAAMpE,EAAOhB,EAAQ8C,EAAY+M,EAAQ,GAAIA,EACvD,CAED,IAAIzR,EAAI,EACJwO,EAAM,EACNkD,EAAM,EAEV,IADA1K,KAAKpF,GAAkB,IAARgB,IACN5C,EAAI0E,IAAe8J,GAAO,MAC7B5L,EAAQ,GAAa,IAAR8O,GAAsC,IAAzB1K,KAAKpF,EAAS5B,EAAI,KAC9C0R,EAAM,GAER1K,KAAKpF,EAAS5B,IAAO4C,EAAQ4L,GAAQ,GAAKkD,EAAM,IAGlD,OAAO9P,EAAS8C,CAClB,EAEAnB,EAAOU,UAAU0N,WAAa,SAAqB/O,EAAOhB,EAAQ8C,EAAYuJ,GAG5E,GAFArL,GAASA,EACThB,KAAoB,GACfqM,EAAU,CACb,MAAMwD,EAAQ/O,KAAKC,IAAI,EAAI,EAAI+B,EAAc,GAE7C+I,EAASzG,KAAMpE,EAAOhB,EAAQ8C,EAAY+M,EAAQ,GAAIA,EACvD,CAED,IAAIzR,EAAI0E,EAAa,EACjB8J,EAAM,EACNkD,EAAM,EAEV,IADA1K,KAAKpF,EAAS5B,GAAa,IAAR4C,IACV5C,GAAK,IAAMwO,GAAO,MACrB5L,EAAQ,GAAa,IAAR8O,GAAsC,IAAzB1K,KAAKpF,EAAS5B,EAAI,KAC9C0R,EAAM,GAER1K,KAAKpF,EAAS5B,IAAO4C,EAAQ4L,GAAQ,GAAKkD,EAAM,IAGlD,OAAO9P,EAAS8C,CAClB,EAEAnB,EAAOU,UAAU2N,UAAY,SAAoBhP,EAAOhB,EAAQqM,GAM9D,OALArL,GAASA,EACThB,KAAoB,EACfqM,GAAUR,EAASzG,KAAMpE,EAAOhB,EAAQ,EAAG,KAAO,KACnDgB,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCoE,KAAKpF,GAAmB,IAARgB,EACThB,EAAS,CAClB,EAEA2B,EAAOU,UAAU4N,aAAe,SAAuBjP,EAAOhB,EAAQqM,GAMpE,OALArL,GAASA,EACThB,KAAoB,EACfqM,GAAUR,EAASzG,KAAMpE,EAAOhB,EAAQ,EAAG,OAAS,OACzDoF,KAAKpF,GAAmB,IAARgB,EAChBoE,KAAKpF,EAAS,GAAMgB,IAAU,EACvBhB,EAAS,CAClB,EAEA2B,EAAOU,UAAU6N,aAAe,SAAuBlP,EAAOhB,EAAQqM,GAMpE,OALArL,GAASA,EACThB,KAAoB,EACfqM,GAAUR,EAASzG,KAAMpE,EAAOhB,EAAQ,EAAG,OAAS,OACzDoF,KAAKpF,GAAWgB,IAAU,EAC1BoE,KAAKpF,EAAS,GAAc,IAARgB,EACbhB,EAAS,CAClB,EAEA2B,EAAOU,UAAU8N,aAAe,SAAuBnP,EAAOhB,EAAQqM,GAQpE,OAPArL,GAASA,EACThB,KAAoB,EACfqM,GAAUR,EAASzG,KAAMpE,EAAOhB,EAAQ,EAAG,YAAa,YAC7DoF,KAAKpF,GAAmB,IAARgB,EAChBoE,KAAKpF,EAAS,GAAMgB,IAAU,EAC9BoE,KAAKpF,EAAS,GAAMgB,IAAU,GAC9BoE,KAAKpF,EAAS,GAAMgB,IAAU,GACvBhB,EAAS,CAClB,EAEA2B,EAAOU,UAAU+N,aAAe,SAAuBpP,EAAOhB,EAAQqM,GASpE,OARArL,GAASA,EACThB,KAAoB,EACfqM,GAAUR,EAASzG,KAAMpE,EAAOhB,EAAQ,EAAG,YAAa,YACzDgB,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5CoE,KAAKpF,GAAWgB,IAAU,GAC1BoE,KAAKpF,EAAS,GAAMgB,IAAU,GAC9BoE,KAAKpF,EAAS,GAAMgB,IAAU,EAC9BoE,KAAKpF,EAAS,GAAc,IAARgB,EACbhB,EAAS,CAClB,EAEA2B,EAAOU,UAAUgO,gBAAkB5C,EAAmB,SAA0BzM,EAAOhB,EAAS,GAC9F,OAAO8L,EAAe1G,KAAMpE,EAAOhB,GAASgM,OAAO,sBAAuBA,OAAO,sBACnF,GAEArK,EAAOU,UAAUiO,gBAAkB7C,EAAmB,SAA0BzM,EAAOhB,EAAS,GAC9F,OAAOiM,EAAe7G,KAAMpE,EAAOhB,GAASgM,OAAO,sBAAuBA,OAAO,sBACnF,GAiBArK,EAAOU,UAAUkO,aAAe,SAAuBvP,EAAOhB,EAAQqM,GACpE,OAAOF,EAAW/G,KAAMpE,EAAOhB,GAAQ,EAAMqM,EAC/C,EAEA1K,EAAOU,UAAUmO,aAAe,SAAuBxP,EAAOhB,EAAQqM,GACpE,OAAOF,EAAW/G,KAAMpE,EAAOhB,GAAQ,EAAOqM,EAChD,EAYA1K,EAAOU,UAAUoO,cAAgB,SAAwBzP,EAAOhB,EAAQqM,GACtE,OAAOE,EAAYnH,KAAMpE,EAAOhB,GAAQ,EAAMqM,EAChD,EAEA1K,EAAOU,UAAUqO,cAAgB,SAAwB1P,EAAOhB,EAAQqM,GACtE,OAAOE,EAAYnH,KAAMpE,EAAOhB,GAAQ,EAAOqM,EACjD,EAGA1K,EAAOU,UAAUkB,KAAO,SAAeuH,EAAQ6F,EAAa5R,EAAOC,GACjE,IAAK2C,EAAOqC,SAAS8G,GAAS,MAAM,IAAItI,UAAU,+BAQlD,GAPKzD,IAAOA,EAAQ,GACfC,GAAe,IAARA,IAAWA,EAAMoG,KAAK9G,QAC9BqS,GAAe7F,EAAOxM,SAAQqS,EAAc7F,EAAOxM,QAClDqS,IAAaA,EAAc,GAC5B3R,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAG9BC,IAAQD,EAAO,OAAO,EAC1B,GAAsB,IAAlB+L,EAAOxM,QAAgC,IAAhB8G,KAAK9G,OAAc,OAAO,EAGrD,GAAIqS,EAAc,EAChB,MAAM,IAAI1O,WAAW,6BAEvB,GAAIlD,EAAQ,GAAKA,GAASqG,KAAK9G,OAAQ,MAAM,IAAI2D,WAAW,sBAC5D,GAAIjD,EAAM,EAAG,MAAM,IAAIiD,WAAW,2BAG9BjD,EAAMoG,KAAK9G,SAAQU,EAAMoG,KAAK9G,QAC9BwM,EAAOxM,OAASqS,EAAc3R,EAAMD,IACtCC,EAAM8L,EAAOxM,OAASqS,EAAc5R,GAGtC,MAAMV,EAAMW,EAAMD,EAalB,OAXIqG,OAAS0F,GAAqD,mBAApC7M,WAAWoE,UAAUuO,WAEjDxL,KAAKwL,WAAWD,EAAa5R,EAAOC,GAEpCf,WAAWoE,UAAU+H,IAAInE,KACvB6E,EACA1F,KAAKqH,SAAS1N,EAAOC,GACrB2R,GAIGtS,CACT,EAMAsD,EAAOU,UAAUqH,KAAO,SAAe5D,EAAK/G,EAAOC,EAAK4D,GAEtD,GAAmB,iBAARkD,EAAkB,CAS3B,GARqB,iBAAV/G,GACT6D,EAAW7D,EACXA,EAAQ,EACRC,EAAMoG,KAAK9G,QACa,iBAARU,IAChB4D,EAAW5D,EACXA,EAAMoG,KAAK9G,aAEI4F,IAAbtB,GAA8C,iBAAbA,EACnC,MAAM,IAAIJ,UAAU,6BAEtB,GAAwB,iBAAbI,IAA0BjB,EAAOkB,WAAWD,GACrD,MAAM,IAAIJ,UAAU,qBAAuBI,GAE7C,GAAmB,IAAfkD,EAAIxH,OAAc,CACpB,MAAMH,EAAO2H,EAAIvH,WAAW,IACV,SAAbqE,GAAuBzE,EAAO,KAClB,WAAbyE,KAEFkD,EAAM3H,EAET,CACL,KAA4B,iBAAR2H,EAChBA,GAAY,IACY,kBAARA,IAChBA,EAAMe,OAAOf,IAIf,GAAI/G,EAAQ,GAAKqG,KAAK9G,OAASS,GAASqG,KAAK9G,OAASU,EACpD,MAAM,IAAIiD,WAAW,sBAGvB,GAAIjD,GAAOD,EACT,OAAOqG,KAQT,IAAIhH,EACJ,GANAW,KAAkB,EAClBC,OAAckF,IAARlF,EAAoBoG,KAAK9G,OAASU,IAAQ,EAE3C8G,IAAKA,EAAM,GAGG,iBAARA,EACT,IAAK1H,EAAIW,EAAOX,EAAIY,IAAOZ,EACzBgH,KAAKhH,GAAK0H,MAEP,CACL,MAAM4F,EAAQ/J,EAAOqC,SAAS8B,GAC1BA,EACAnE,EAAOe,KAAKoD,EAAKlD,GACfvE,EAAMqN,EAAMpN,OAClB,GAAY,IAARD,EACF,MAAM,IAAImE,UAAU,cAAgBsD,EAClC,qCAEJ,IAAK1H,EAAI,EAAGA,EAAIY,EAAMD,IAASX,EAC7BgH,KAAKhH,EAAIW,GAAS2M,EAAMtN,EAAIC,EAE/B,CAED,OAAO+G,IACT,EAMA,MAAMyL,EAAS,CAAE,EACjB,SAASC,EAAGC,EAAKC,EAAYC,GAC3BJ,EAAOE,GAAO,cAAwBE,EACpCC,cACEC,QAEAhP,OAAOmH,eAAelE,KAAM,UAAW,CACrCpE,MAAOgQ,EAAWnI,MAAMzD,KAAMN,WAC9BsM,UAAU,EACVC,cAAc,IAIhBjM,KAAKkM,KAAO,GAAGlM,KAAKkM,SAASP,YAKtB3L,KAAKkM,IACb,CAEGnT,WACF,OAAO4S,CACR,CAEG5S,SAAM6C,GACRmB,OAAOmH,eAAelE,KAAM,OAAQ,CAClCiM,cAAc,EACd9H,YAAY,EACZvI,QACAoQ,UAAU,GAEb,CAEDxM,WACE,MAAO,GAAGQ,KAAKkM,SAASP,OAAS3L,KAAKmM,SACvC,EAEL,CA+BA,SAASC,EAAuB1L,GAC9B,IAAIoC,EAAM,GACN9J,EAAI0H,EAAIxH,OACZ,MAAMS,EAAmB,MAAX+G,EAAI,GAAa,EAAI,EACnC,KAAO1H,GAAKW,EAAQ,EAAGX,GAAK,EAC1B8J,EAAM,IAAIpC,EAAI7C,MAAM7E,EAAI,EAAGA,KAAK8J,IAElC,MAAO,GAAGpC,EAAI7C,MAAM,EAAG7E,KAAK8J,GAC9B,CAYA,SAAS6D,EAAY/K,EAAOiH,EAAK0C,EAAKzI,EAAKlC,EAAQ8C,GACjD,GAAI9B,EAAQ2J,GAAO3J,EAAQiH,EAAK,CAC9B,MAAMrC,EAAmB,iBAARqC,EAAmB,IAAM,GAC1C,IAAIwJ,EAWJ,MARIA,EAFA3O,EAAa,EACH,IAARmF,GAAaA,IAAQ+D,OAAO,GACtB,OAAOpG,YAAYA,QAA2B,GAAlB9C,EAAa,KAAS8C,IAElD,SAASA,QAA2B,GAAlB9C,EAAa,GAAS,IAAI8C,iBACtB,GAAlB9C,EAAa,GAAS,IAAI8C,IAGhC,MAAMqC,IAAMrC,YAAY+E,IAAM/E,IAElC,IAAIiL,EAAOa,iBAAiB,QAASD,EAAOzQ,EACnD,EAtBH,SAAsBkB,EAAKlC,EAAQ8C,GACjC4K,EAAe1N,EAAQ,eACHkE,IAAhBhC,EAAIlC,SAAsDkE,IAA7BhC,EAAIlC,EAAS8C,IAC5C+K,EAAY7N,EAAQkC,EAAI5D,QAAUwE,EAAa,GAEnD,CAkBE6O,CAAYzP,EAAKlC,EAAQ8C,EAC3B,CAEA,SAAS4K,EAAgB1M,EAAOsQ,GAC9B,GAAqB,iBAAVtQ,EACT,MAAM,IAAI6P,EAAOe,qBAAqBN,EAAM,SAAUtQ,EAE1D,CAEA,SAAS6M,EAAa7M,EAAO1C,EAAQ8F,GACnC,GAAItD,KAAKO,MAAML,KAAWA,EAExB,MADA0M,EAAe1M,EAAOoD,GAChB,IAAIyM,EAAOa,iBAAiBtN,GAAQ,SAAU,aAAcpD,GAGpE,GAAI1C,EAAS,EACX,MAAM,IAAIuS,EAAOgB,yBAGnB,MAAM,IAAIhB,EAAOa,iBAAiBtN,GAAQ,SACR,MAAMA,EAAO,EAAI,YAAY9F,IAC7B0C,EACpC,CAvFA8P,EAAE,2BACA,SAAUQ,GACR,OAAIA,EACK,GAAGA,gCAGL,gDACR,EAAErP,YACL6O,EAAE,uBACA,SAAUQ,EAAMvO,GACd,MAAO,QAAQuO,4DAA+DvO,GAC/E,EAAEP,WACLsO,EAAE,mBACA,SAAUxJ,EAAKmK,EAAOK,GACpB,IAAIC,EAAM,iBAAiBzK,sBACvB0K,EAAWF,EAWf,OAVIjL,OAAOoL,UAAUH,IAAUhR,KAAKK,IAAI2Q,GAAS,GAAK,GACpDE,EAAWR,EAAsBlL,OAAOwL,IACd,iBAAVA,IAChBE,EAAW1L,OAAOwL,IACdA,EAAQ9F,OAAO,IAAMA,OAAO,KAAO8F,IAAU9F,OAAO,IAAMA,OAAO,QACnEgG,EAAWR,EAAsBQ,IAEnCA,GAAY,KAEdD,GAAO,eAAeN,eAAmBO,IAClCD,CACR,EAAE9P,YAiEL,MAAMiQ,EAAoB,oBAgB1B,SAASlN,EAAarC,EAAQgF,GAE5B,IAAIS,EADJT,EAAQA,GAAS9G,SAEjB,MAAMvC,EAASqE,EAAOrE,OACtB,IAAI6T,EAAgB,KACpB,MAAMzG,EAAQ,GAEd,IAAK,IAAItN,EAAI,EAAGA,EAAIE,IAAUF,EAAG,CAI/B,GAHAgK,EAAYzF,EAAOpE,WAAWH,GAG1BgK,EAAY,OAAUA,EAAY,MAAQ,CAE5C,IAAK+J,EAAe,CAElB,GAAI/J,EAAY,MAAQ,EAEjBT,GAAS,IAAM,GAAG+D,EAAMvM,KAAK,IAAM,IAAM,KAC9C,QACV,CAAe,GAAIf,EAAI,IAAME,EAAQ,EAEtBqJ,GAAS,IAAM,GAAG+D,EAAMvM,KAAK,IAAM,IAAM,KAC9C,QACD,CAGDgT,EAAgB/J,EAEhB,QACD,CAGD,GAAIA,EAAY,MAAQ,EACjBT,GAAS,IAAM,GAAG+D,EAAMvM,KAAK,IAAM,IAAM,KAC9CgT,EAAgB/J,EAChB,QACD,CAGDA,EAAkE,OAArD+J,EAAgB,OAAU,GAAK/J,EAAY,MACzD,MAAU+J,IAEJxK,GAAS,IAAM,GAAG+D,EAAMvM,KAAK,IAAM,IAAM,KAMhD,GAHAgT,EAAgB,KAGZ/J,EAAY,IAAM,CACpB,IAAKT,GAAS,GAAK,EAAG,MACtB+D,EAAMvM,KAAKiJ,EACjB,MAAW,GAAIA,EAAY,KAAO,CAC5B,IAAKT,GAAS,GAAK,EAAG,MACtB+D,EAAMvM,KACJiJ,GAAa,EAAM,IACP,GAAZA,EAAmB,IAE3B,MAAW,GAAIA,EAAY,MAAS,CAC9B,IAAKT,GAAS,GAAK,EAAG,MACtB+D,EAAMvM,KACJiJ,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAE3B,KAAW,MAAIA,EAAY,SASrB,MAAM,IAAI1J,MAAM,sBARhB,IAAKiJ,GAAS,GAAK,EAAG,MACtB+D,EAAMvM,KACJiJ,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAItB,CACF,CAED,OAAOsD,CACT,CA2BA,SAASzG,EAAeqC,GACtB,OAAOS,EAAOqK,YAxHhB,SAAsB9K,GAMpB,IAFAA,GAFAA,EAAMA,EAAI+K,MAAM,KAAK,IAEXxH,OAAOD,QAAQsH,EAAmB,KAEpC5T,OAAS,EAAG,MAAO,GAE3B,KAAOgJ,EAAIhJ,OAAS,GAAM,GACxBgJ,GAAY,IAEd,OAAOA,CACT,CA4G4BgL,CAAYhL,GACxC,CAEA,SAASF,EAAYmL,EAAKC,EAAKxS,EAAQ1B,GACrC,IAAIF,EACJ,IAAKA,EAAI,EAAGA,EAAIE,KACTF,EAAI4B,GAAUwS,EAAIlU,QAAYF,GAAKmU,EAAIjU,UADpBF,EAExBoU,EAAIpU,EAAI4B,GAAUuS,EAAInU,GAExB,OAAOA,CACT,CAKA,SAASkF,EAAYS,EAAKK,GACxB,OAAOL,aAAeK,GACZ,MAAPL,GAAkC,MAAnBA,EAAImN,aAA+C,MAAxBnN,EAAImN,YAAYI,MACzDvN,EAAImN,YAAYI,OAASlN,EAAKkN,IACpC,CACA,SAASnN,EAAaJ,GAEpB,OAAOA,GAAQA,CACjB,CAIA,MAAM0H,EAAsB,WAC1B,MAAMgH,EAAW,mBACXC,EAAQ,IAAIxU,MAAM,KACxB,IAAK,IAAIE,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC3B,MAAMuU,EAAU,GAAJvU,EACZ,IAAK,IAAIuI,EAAI,EAAGA,EAAI,KAAMA,EACxB+L,EAAMC,EAAMhM,GAAK8L,EAASrU,GAAKqU,EAAS9L,EAE3C,CACD,OAAO+L,CACR,CAV2B,GAa5B,SAASjF,EAAoBmF,GAC3B,MAAyB,oBAAX5G,OAAyB6G,EAAyBD,CAClE,CAEA,SAASC,IACP,MAAM,IAAInU,MAAM,uBAClB,0CCvjEaoU,eAAe,WAAA,SAAAA,IAAA,QAAAA,EACjBC,QAAP,SAAezO,GACX,IAAM0O,EAAOC,KAAKC,UAAU5O,GAG5B,OAFe3C,EAAMA,OAACe,KAAKsQ,EAAM,SACPpO,SAAS,UAE9BgG,QAAQ,KAAM,IACdA,QAAQ,MAAO,KACfA,QAAQ,MAAO,IACxB,EAACkI,CAAA,CATuB,GCAfK,eAAO,WAAA,SAAAA,IAAAA,CAef,OAfeA,EACTC,OAAP,WACI,IACMC,EAD2B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAChBC,KAAK,SAAAvJ,GAAK,OAAAA,GAAKwJ,OAAOF,UAAU,GAC5E,MAAO,CACHG,YAAaC,UAAUD,cACvBE,mBAAmB,EACnBC,SAAUF,UAAUE,SACpBC,UAAWH,UAAUG,UACrBC,YAAaC,OAAOP,OAAOQ,MAC3BC,aAAcF,OAAOP,OAAOU,OAC5BC,gBAAgB,IAAIC,MAAOC,oBAC3Bf,WAAAA,EACAgB,aAAc,+HAEtB,EAAClB,CAAA,CAfe,GCAPmB,eAIT,WAAA,SAAAA,EAAYC,GAAa,IAAAC,EAAApP,KAAAA,KAHjBqP,WAAK,EAAArP,KACLsP,cAAQ,EAGZtP,KAAKqP,MAAQ,IAAIE,QAAc,SAACC,GAC5BJ,EAAKE,SAAWG,WAAWD,EAASL,EACxC,EACJ,CAAC,IAAAO,EAAAR,EAAAjS,UAmBA,OAnBAyS,EAEDC,KAAA,WACI,OAAO3P,KAAKqP,KAChB,EAACK,EAEDE,OAAA,WACIC,aAAa7P,KAAKsP,UAClBtP,KAAKqP,MAAQE,QAAQO,OAAO,CACxB3D,QAAS,mBAEjB,EAAC+C,EAEMa,MAAP,SAAaZ,GACT,OAAO,IAAID,EAAMC,EACrB,EAACD,EAEMU,OAAP,SAAcI,GACVH,aAAaG,EACjB,EAACd,CAAA,CAvBD,GCJSe,eAAkB,WAAA,SAAAA,IAAAA,CAwC1B,OAxC0BA,EACpBC,aAAP,SAAoBA,GAA2BC,IAAAA,EACrCC,EAASC,SAASC,cAAc,UAatC,OAZAF,EAAOJ,GAAKE,EAAahE,KACzBkE,EAAOlE,KAAOgE,EAAahE,KAEvBgE,EAAaK,gBACbH,EAAOI,aAAa,QAAsHN,8GAAAA,EAAaO,UAAY,IAAM,MAGzKL,EAAOM,MAAMC,QAAUT,EAAaO,UAAY,IAAM,IAG1DN,OAAAA,EAAAD,EAAaU,SAAbT,EAAqBU,YAAYT,GAE1BA,CACX,EAACH,EAEMa,WAAP,SAAkBA,GACd,IAAMC,EAAOV,SAASC,cAAc,QASpC,OARAS,EAAKf,GAAKc,EAAW5E,KACrB6E,EAAK7E,KAAO4E,EAAW5E,KACvB6E,EAAKC,OAASF,EAAWG,UACzBF,EAAKrL,OAASoL,EAAWpL,OACzBqL,EAAKG,OAASJ,EAAWI,OAEzBJ,EAAWF,OAAOC,YAAYE,GAEvBA,CACX,EAACd,EAEMkB,YAAP,SAAmBA,GACf,IAAMzE,EAAQ2D,SAASC,cAAc,SAOrC,OANA5D,EAAMsD,GAAKmB,EAAYjF,KACvBQ,EAAMR,KAAOiF,EAAYjF,KACzBQ,EAAM1N,KAAOmS,EAAYnS,KAEzBmS,EAAYP,OAAOC,YAAYnE,GAExBA,CACX,EAACuD,CAAA,CAxC0B,6GC0Cf,SAAAmB,EAAWC,EAAMC,EAAK1V,GACzB,IAAAyV,EAAA9V,EAAA,mBAEiB,CACtB,IAAAK,EAAGL,oCACN,EAAA+V,IACJA,EAAA1V,EAAAL,+GA9CYgW,eAAiB,WACT,SAAAA,IACAA,QAAAA,EAAAtU,UAAiBuU,KAAA,SAAAC,EAAAC,OAEtBC,EAAA,IAAAJ,EACRD,EAAKtR,KAAQzE,EACb,GAAA+V,EAAK,KACRM,EAAA,EAAAN,EAAAG,EAAAC,KAEME,EAAiC,OAE5BD,EAAA,EAAUC,EAAE5R,KAAA6R,UACZ7W,KACD2W,EAAA,EAAA3W,GAEK,OAAA2W,CACI,CACA,OACH3R,KAgBO,OAdJA,KAAA8R,EAAA,SAAA1C,OAEH,IAAAxT,EAAAwT,EAAAyC,EACD,EAAAzC,EAAA7T,QACIkW,EAAcA,EAAC7V,GAAAA,KAElBwV,EAAAO,EAAA,EAAAD,EAAA9V,IAELwV,EAAAO,EAAA,sBAIQ,GAEIA,CACH,GAEL,CArCU,kDCJlBI,EDICC,eAIT,WAAA,SAAAA,EAAYC,EAAwBC,GAAelS,KAHlCmS,cAAQ,EAAAnS,KACRoS,aAAO,EAGpBpS,KAAKmS,SAAWF,EAChBjS,KAAKoS,QAAUF,CACnB,QAACF,EAAA/U,UAEDoV,QAAA,SAAWC,EAA+BpB,GAAc9B,IAAAA,EAgC5BpP,KA/BxB,WAAWuP,QAAkBC,SAAAA,EAASM,GAAU,IAAA,IAiC1ByC,EAjC0BC,EAAA,SAAAC,GAAAF,GAAAA,EAAAE,OAAAA,EAiC5C3C,EAAO4C,EAAW,EAhCdC,EAAU,EACVD,EAAuB,KAAKE,gkBAAAC,CAC7B,WAAA,SAAAC,EAAAC,GAAAR,OAAAA,EAAAQ,GA0BCJ,IAAUpD,QAAAC,QACJN,EAAMa,MAAMX,EAAK+C,SAASa,cAAcrD,QAAM6B,KAAA,WAAA,GAAA,CAAA,IAAAyB,0BA1BhD1D,QAAAC,QACmB8C,EAAU,CACzBK,QAASA,EACTO,YAAa9D,EAAK+C,SAASe,eAC7B1B,cAHEG,GAIJ,GAAIA,EAAOwB,UAGV,OAFG3D,EAAQmC,EAAOzS,WAAMqT,EAExB,GACIZ,EAAOyB,mBACRtD,EAAO6B,GAAQY,EAGtB,EAAA,4DAamDc,CAAA,WAZ7CpP,GASHmL,EAAKgD,QAAQlW,IARbwW,EAAY,CACRvG,QAAO,4BAA8B+E,EAAM,IAC3CjN,MAAAA,EACAqP,eAAgB,CACZX,QAAAA,EACAO,YAAa9D,EAAK+C,SAASe,cAItC,GAAA,OAAAD,GAAAA,EAAAzB,KAAAyB,EAAAzB,KAAAsB,GAAAA,EAAAG,EAGJ,EAAAV,WAAAA,OAAAA,GAAQI,GAAWvD,EAAK+C,SAASe,WAAW,GAAA,OAAA3D,QAAAC,QAAAoD,GAAAA,EAAApB,KAAAoB,EAAApB,KAAAgB,GAAAA,EAAAI,GAGjD,CAAC,MAAA5X,GAAAuU,OAAAA,QAAAO,OAAA9U,EACL,CAAA,EAAA,EAACgX,CAAA,CAzCD,GEJSuB,0BAKT,SAAAA,EAAYtB,EAA6BC,EAAiBsB,QAAA,IAAAA,IAAAA,EAA4B,IAAIxB,EAAkBC,EAASC,IAJpGC,KAAAA,qBACAsB,kBAAY,EAAAzT,KACZoS,aAGb,EAAApS,KAAKyT,aAAeD,EACpBxT,KAAKoS,QAAUF,EACflS,KAAKmS,SAAWF,CACpB,CAAC,IAAAvC,EAAA6D,EAAAtW,UAuDA,OAvDAyS,EAEKgE,KAAI,SAAIC,GAAiB,IAAAvE,IAAAA,EACdpP,KAAP4T,EAAIxE,EAAQ,OAAAG,QAAAC,QACLJ,EAAKqE,aAAapB,QAAO,SAAAwB,GAAY,IAAAlB,EAAOkB,EAAPlB,QAASO,EAAWW,EAAXX,YAAgB,IACvE,IAAMY,EAAmD,KAAxCF,EAAKzB,SAAS4B,kBAAoB,IAC7CC,EAAkB,IAAIC,gBACtBC,EAAYzE,WAAW,WAAM,OAAAuE,EAAgBG,OAAO,EAAEL,GASzD,OAPH1E,EAAKgD,QAAQlW,IAAI,CACbiQ,QAAS,uBACTiI,QAAS,CACLT,QAAAA,EACAhB,QAAAA,EACAO,YAAAA,KAEL3D,QAAAC,QAEoB6E,MAAMV,EAAQW,IAAK,CACtCC,QAAOC,EAAA,CAAA,EACAb,EAAQY,QACX,CAAA,YAAa5B,EAAQnT,WACrB,iBAAkB0T,EAAY1T,WAC9BiV,OAAU,mBACV,eAAgB,qBAEpBC,WAAW,EACXC,KAAM9G,KAAKC,UAAU6F,EAAQgB,MAC7BzD,OAAQyC,EAAQzC,OAChB0D,OAAQZ,EAAgBY,UAC1BpD,KAZIqD,SAAAA,GAuBkB,OATxBzF,EAAKgD,QAAQlW,IAAI,CACbiQ,QAAS,wBACTiI,QAAS,CACLS,SAAAA,EACAlC,QAAAA,EACAO,YAAAA,KAIRrD,aAAaqE,GAAW3E,QAAAC,QACHqF,EAASjH,QAAM4D,KAAA,SAA9BG,GACN,MAAO,CACHwB,UAAW0B,EAASC,GACpB1B,iBAAkBhE,EAAKgE,iBAAiByB,GACxC3V,KAAM2V,EAASC,GAAKnD,EAAOzS,KAAOyS,EACpC,IACN,CAAC,MAAA3W,GAAAuU,OAAAA,QAAAO,OAAA9U,EAAM2Y,CAAAA,EAAAA,IAAAA,EAAQzC,OAAM,KAAKyC,EAAQW,KACtC,CAAC,MAAAtZ,GAAAuU,OAAAA,QAAAO,OAAA9U,EAAA0U,CAAAA,EAAAA,EAED0D,iBAAA,SAAiByB,GAGb,MAFyB,CAAC,IAAK,IAAK,IAAK,IAAK,KAEtB9O,SAAS8O,EAASE,OAC9C,EAACxB,CAAA,uEClEQyB,eAAaA,WAAAA,SAAAA,YAAAA,EAAA/X,UACtBf,IAAA,SAAIA,GACA8H,QAAQ9H,IAAI2R,KAAKC,UAAU5R,GAC/B,EAAC8Y,CAAA,CAHqBA,qEFF1B,SAAYjD,GACRA,EAAA,mBAAA,KACAA,EAAA,mBAAA,KACAA,EAAA,mBAAA,KACAA,EAAA,mBAAA,KACAA,EAAA,WAAA,IACH,CAND,CAAYA,IAAAA,EAMX,CAAA,+DGFYkD,eAAsB,WAS/B,SAAAA,EAAYhD,EAA4BC,QAHvBC,cAAQ,EAAAnS,KACRoS,aAGb,EAAApS,KAAKmS,SAAWF,EAChBjS,KAAKoS,QAAUF,CACnB,QAAC+C,EAAAhY,UAEDoV,QAAA,SAAQ6C,OAA2B9F,EAAApP,KAC/B,OAAKkV,EAAaC,iBAIP5F,QAAc,SAACC,EAASM,GAC/B,IACIV,EAAKgD,QAAQlW,IAAI,CACbiQ,QAAS,gCACTiI,QAAS,CACLc,aAAAA,KAIPjF,EAAmBC,aAAa,CAC7BU,OAAQxB,EAAK+C,SAASiD,UACtBlJ,KAAM+I,EAAuBI,YAC7B5E,WAAW,EACXF,kBAAmBnB,EAAK+C,SAASmD,oBAGrC,IAAMvE,EAAOd,EAAmBa,WAAW,CACvCF,OAAQxB,EAAK+C,SAASiD,UACtBlJ,KAAM+I,EAAuBM,UAC7BtE,UAAWiE,EAAaC,aACxBzP,OAAQuP,EAAuBI,YAC/BnE,OAAQ,SAGNsE,EAAsBvF,EAAmBkB,YAAY,CACvDP,OAAQG,EACR7E,KAAM+I,EAAuBQ,gBAC7BzW,KAAMiW,EAAuBS,kBAG3BC,EAAO,CACTC,qBAAsBV,EAAaW,UACnCC,WAAYZ,EAAaa,YACzBC,eAAgBd,EAAae,iBAC7BC,YAAa,OACbC,oBAAqB/G,EAAK+C,SAASgE,qBAAuBpE,EAAoBqE,oBAG5EC,EAAa3I,EAAgBC,QAAQgI,GAC3CH,EAAoB5Z,MAAQya,EAE5BtF,EAAKuF,SAELlH,EAAKgD,QAAQlW,IAAI,CACbiQ,QAAS,iCACTiI,QAAS,CACLc,aAAAA,EACAS,KAAAA,EACAU,WAAAA,KAIR7G,GACH,CACD,MAAOvL,GASH,OARAmL,EAAKgD,QAAQlW,IAAI,CACbiQ,QAAS,8BACTiI,QAAS,CACLc,aAAAA,EACAjR,MAAAA,KAID6L,EAAO,CACV3D,QAASlI,EAAMzE,YAEtB,CACL,GAtEW+P,QAAQC,SAuEvB,EAACyF,CAAA,CAvF8B,GAAtBA,EACeI,YAAc,kBAD7BJ,EAEeM,UAAY,gBAF3BN,EAGeQ,gBAAkB,OAHjCR,EAIeS,gBAAkB,aCHjCa,0BAST,SAAAA,EAAYtE,EAAkCC,GAH7BE,KAAAA,oBACAD,cAAQ,EAGrBnS,KAAKoS,QAAUF,EACflS,KAAKmS,SAAWF,CACpB,QAACsE,EAAAtZ,UAEDoV,QAAA,SAAQmE,GAAiC,IAAApH,EACrCpP,KAAA,OAAKwW,EAAgBC,YAId,IAAIlH,QAAc,SAACC,EAASM,GAC/B,IAAI,IAAA4G,EACAtH,EAAKgD,QAAQlW,IAAI,CACbiQ,QAAS,sCACTiI,QAAS,CACLoC,gBAAAA,KAIR,IAAMpG,EAASH,EAAmBC,aAAa,CAC3CU,OAAQxB,EAAK+C,SAASiD,UACtB3E,WAAW,EACXvE,KAAMqK,EAA6BlB,YACnC9E,kBAAmBnB,EAAK+C,SAASmD,oBAErCoB,OAAAA,EAAAtH,EAAK+C,SAASmD,oBAAdoB,EAAiC7V,KAAKuO,EAAK+C,SAAU/B,GAErD,IAAMW,EAAOd,EAAmBa,WAAW,CACvCF,OAAQxB,EAAK+C,SAASiD,UACtBlJ,KAAMqK,EAA6BhB,UACnCtE,UAAWuF,EAAgBC,YAC3B/Q,OAAQ6Q,EAA6BlB,YACrCnE,OAAQ,SAGNyF,EAAyB1G,EAAmBkB,YAAY,CAC1DP,OAAQG,EACR7E,KAAMqK,EAA6BK,gBACnC5X,KAAMuX,EAA6BM,kBAQjCC,EAA0BpJ,EAAgBC,QALtB,CACtBiI,qBAAsBY,EAAgBX,UACtCkB,6BAA8BP,EAAgBQ,kBAIlDL,EAAuB/a,MAAQkb,EAE/B/F,EAAKuF,SAELlH,EAAKgD,QAAQlW,IAAI,CACbiQ,QAAS,uCACTiI,QAAS,CACLoC,gBAAAA,EACAM,wBAAAA,KAIRtH,GACH,CACD,MAAOvL,GASH,OARAmL,EAAKgD,QAAQlW,IAAI,CACbiQ,QAAS,oCACTiI,QAAS,CACLoC,gBAAAA,EACAvS,MAAAA,KAID6L,EAAO,CACV3D,QAASlI,EAAMzE,YAEtB,CACL,GAnEW+P,QAAQC,SAoEvB,EAAC+G,CAAA,IApFQA,EACelB,YAAsB,sBADrCkB,EAEehB,UAAoB,oBAFnCgB,EAGeK,gBAA0B,oBAHzCL,EAIeM,gBAA0B,SCExC,IAAAI,0BAOV,SAAAA,EACIhF,EACAC,EACAgF,EACAC,EACAC,QAHAlF,IAAAA,IAAAA,EAAkB,IAAI8C,QACtBkC,IAAAA,IAAAA,EAA0B,IAAI3D,EAAgBtB,EAASC,aACvDiF,IAAAA,EAA2C,IAAIZ,EAA6BtE,EAASC,SACtD,IAA/BkF,IAAAA,EAA+B,IAAInC,EAAuBhD,EAASC,IAAOlS,KAX7DmS,cAAQ,EAAAnS,KACRoS,aAAO,EAAApS,KACPqX,aAAO,EAAArX,KACPsX,sBAAgB,EAAAtX,KAChBuX,gBAAU,EAQvBvX,KAAKmS,SAAWF,EAChBjS,KAAKoS,QAAUF,EACflS,KAAKqX,QAAUH,EACflX,KAAKsX,iBAAmBH,EACxBnX,KAAKuX,WAAaH,CACtB,CAAC,IAAA1H,EAAAuH,EAAAha,UAyDC,OAzDDyS,EAEM2C,QAAOA,SAACsB,GAAwB,IAAAvE,IAAAA,EACnCpP,KAGG,OAHHoP,EAAKgD,QAAQlW,IAAI,CACbiQ,QAAS,oBACTiI,QAAST,IACVpE,QAAAC,QACyBJ,EAAKoI,SAAS7D,IAAQnC,KAAA,SAA9CgF,GAID,OAHHpH,EAAKgD,QAAQlW,IAAI,CACbiQ,QAAS,qBACTiI,QAASoC,IACVjH,QAAAC,QACGJ,EAAKkI,iBAAiBjF,QAAQmE,IAAgBhF,KAAA,WAIjD,OAHHpC,EAAKgD,QAAQlW,IAAI,CACbiQ,QAAS,iBACTiI,QAASoC,IACVjH,QAAAC,QACsBJ,EAAKqI,MAAMjB,IAAgBhF,KAAA,SAAhD0D,GAID,OAHH9F,EAAKgD,QAAQlW,IAAI,CACbiQ,QAAS,kBACTiI,QAASc,IACV3F,QAAAC,QACGJ,EAAKmI,WAAWlF,QAAQ6C,IAAa1D,KAC3CpC,WAGG,OAHHA,EAAKgD,QAAQlW,IAAI,CACbiQ,QAAS,qBACTiI,QAASc,IACV3F,QAAAC,QAC0BJ,EAAKsI,UAAUxC,IAAa1D,KAArDmG,SAAAA,GAKJ,OAJAvI,EAAKgD,QAAQlW,IAAI,CACbiQ,QAAS,sBACTiI,QAASuD,IAENA,CAAiB,EAC3B,EAAA,EAAA,EAAA,EAAA,CAAC,MAAA3c,GAAA,OAAAuU,QAAAO,OAAA9U,EAAA,CAAA,EAAA0U,EAED8H,SAAA,SAAS7D,GACN,OAAO3T,KAAKqX,QAAQ3D,KAAuB,CACvCY,IAAQtU,KAAKmS,SAASyF,gBAAe,WAAWjE,EAAQ3D,GAAE,WAC1DkB,OAAQ,OACRyD,KAAM,CACFkD,QAAS9J,EAAQC,WAG5B,EAAC0B,EAED+H,MAAA,SAAM9D,GACH,OAAO3T,KAAKqX,QAAQ3D,KAAoB,CACpCY,IAAQtU,KAAKmS,SAASyF,2BAA0BjE,EAAQ3D,GAAE,QAC1DkB,OAAQ,QAEf,EAACxB,EAEDgI,UAAA,SAAU/D,GACP,OAAW3T,KAACqX,QAAQ3D,KAAwB,CACxCY,IAAQtU,KAAKmS,SAASyF,2BAA0BjE,EAAQ3D,GAAE,YAC1DkB,OAAQ,QAEf,EAAC+F,CAAA"}